{
	"openapi": "3.0.1",
	"info": {
		"title": "SecureTransport Administrator API v2.0",
		"contact": {
			"email": "support@axway.com"
		},
		"license": {
			"name": "Copyright Axway 2020. All rights reserved."
		},
		"version": "2.0.0"
	},
	"servers": [
		{
			"url": "https://ptx140.demo.axway.com:8443/api/v2.0"
		}
	],
	"tags": [
		{
			"name": "accountSetup"
		},
		{
			"name": "accounts"
		},
		{
			"name": "addressBook"
		},
		{
			"name": "administrativeRoles"
		},
		{
			"name": "administrators"
		},
		{
			"name": "applications"
		},
		{
			"name": "businessUnits"
		},
		{
			"name": "certificates"
		},
		{
			"name": "clusterServices"
		},
		{
			"name": "configurations"
		},
		{
			"name": "daemons"
		},
		{
			"name": "icapServers"
		},
		{
			"name": "ldapDomains"
		},
		{
			"name": "loginRestrictionPolicies"
		},
		{
			"name": "logs"
		},
		{
			"name": "mailTemplates"
		},
		{
			"name": "myself"
		},
		{
			"name": "routes"
		},
		{
			"name": "routeStepsMetadata"
		},
		{
			"name": "routeStepsCharsets"
		},
		{
			"name": "servers"
		},
		{
			"name": "sessions"
		},
		{
			"name": "sites"
		},
		{
			"name": "siteTemplates"
		},
		{
			"name": "statisticsSummary"
		},
		{
			"name": "subscriptions"
		},
		{
			"name": "transactionManager"
		},
		{
			"name": "transferProfiles"
		},
		{
			"name": "transfers"
		},
		{
			"name": "userClasses"
		},
		{
			"name": "version"
		},
		{
			"name": "zones"
		}
	],
	"paths": {
		"/cs/h2h/control/config": {
			"get": {
				"operationId": "getServerInfo_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/accounts": {
			"get": {
				"operationId": "getAccounts_1",
				"parameters": [
					{
						"name": "homeFolder",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "status",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createAccount_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseAccount"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/accounts/{name}": {
			"get": {
				"operationId": "getAccount_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateAccount_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseAccount"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteAccount_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "purge",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "accountExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateAccount_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/icapServers": {
			"get": {
				"operationId": "getIcapServers_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createIcapServer_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalIcapServer"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/icapServers/{name}": {
			"get": {
				"operationId": "getIcapServer_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateIcapServer_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalIcapServer"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteIcapServer_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "icapServerExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateIcapServer_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/ldapDomains": {
			"get": {
				"operationId": "getLdapDomains_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createLdapDomain_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalLdapDomain"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/ldapDomains/{name}": {
			"get": {
				"operationId": "getLdapDomain_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateLdapDomain_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalLdapDomain"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteLdapDomain_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"head": {
				"operationId": "ldapExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateLdapDomain_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/ldapDomains/{name}/operations": {
			"post": {
				"operationId": "testConnection_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalLdapTestConnectionServer"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/applications": {
			"get": {
				"operationId": "getApplications_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createApplication_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseApplication"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/applications/{name}": {
			"get": {
				"operationId": "getApplication_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateApplication_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseApplication"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteApplication_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "applicationExist",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "patchApplication_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/businessUnits": {
			"get": {
				"operationId": "getBusinessUnits_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createBusinessUnit_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBusinessUnit"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/businessUnits/{name}": {
			"get": {
				"operationId": "getBusinessUnit_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateBusinessUnit_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBusinessUnit"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteBusinessUnit_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "businessUnitExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateBusinessUnit_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/certificates": {
			"get": {
				"operationId": "getCertificates_1",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "usage",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "fingerprintAlgorithm",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "base64EncodedFingerprint",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "disableChaining",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "generateCertificate_1",
				"requestBody": {
					"content": {
						"multipart/mixed": {
							"schema": {
								"$ref": "#/components/schemas/MultiPart"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/certificates/{id}": {
			"get": {
				"operationId": "exportCertificate",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "password",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "exportSSHPublicKey",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "exportPrivateKey",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"multipart/mixed": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteCertificate_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "certificateExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "updateCertificateAccess_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/certificates/requests": {
			"get": {
				"operationId": "getCertificateRequests_1",
				"parameters": [
					{
						"name": "usage",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "generateCertificateRequest_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalCertificateRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {},
							"multipart/mixed": {}
						}
					}
				}
			}
		},
		"/certificates/requests/{id}": {
			"get": {
				"operationId": "getCertificateRequest_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "completeCertificateRequest_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"alias",
									"certificateFile"
								],
								"type": "object",
								"properties": {
									"alias": {
										"type": "string"
									},
									"certificateFile": {
										"type": "object"
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteCertificateRequest_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "certificateRequestExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/zones": {
			"get": {
				"operationId": "getDmzZones_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createZone_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalZone"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/zones/{name}": {
			"get": {
				"operationId": "getDmzZone_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateZone_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalZone"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteZone_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "zoneExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateZone_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/loginRestrictionPolicies": {
			"get": {
				"operationId": "getPolicies_1",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "orderByName",
						"in": "query",
						"schema": {
							"type": "string",
							"default": "ascending"
						}
					},
					{
						"name": "nameMatchMode",
						"in": "query",
						"schema": {
							"type": "string",
							"default": "EXACT"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createPolicy_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalLoginRestrictionPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/loginRestrictionPolicies/{name}": {
			"get": {
				"operationId": "getPolicy_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updatePolicyProperties_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalLoginRestrictionPolicy"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deletePolicy_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "policyExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdatePolicy_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/logs/audit": {
			"get": {
				"operationId": "getOrExportAuditLogEntries_1",
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "endDate",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {},
							"text/csv": {}
						}
					}
				}
			}
		},
		"/logs/audit/{id}": {
			"get": {
				"operationId": "getAuditLogEntry_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateAuditLogEntryDescription_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalAuditLogEntry"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/logs/server": {
			"get": {
				"operationId": "getServerLogEntries_1",
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "endDate",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "message",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "component",
						"in": "query",
						"schema": {
							"uniqueItems": true,
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {},
							"text/csv": {}
						}
					}
				}
			}
		},
		"/logs/server/{id}": {
			"get": {
				"operationId": "getServerLogEntry_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/logs/transfers": {
			"get": {
				"operationId": "getTransfers_1",
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "resubmitted",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "startTimeBefore",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "startTimeAfter",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "endTimeBefore",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "endTimeAfter",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "filename",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "account",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "loginName",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "site",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operationIndex",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "userClass",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "transferId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "cycleId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "actionBy",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "application",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "direction",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {},
							"text/csv": {}
						}
					}
				}
			}
		},
		"/logs/transfers/{id}": {
			"get": {
				"operationId": "getTransfer_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/logs/transfers/{id}/operations": {
			"post": {
				"operationId": "transferOperations_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/mailTemplates": {
			"get": {
				"operationId": "getMailTemplates_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createTemplate_1",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"file",
									"name"
								],
								"type": "object",
								"properties": {
									"file": {
										"$ref": "#/components/schemas/FormDataContentDisposition"
									},
									"description": {
										"type": "string"
									},
									"name": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/mailTemplates/{name}": {
			"get": {
				"operationId": "getMailTemplate",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {},
							"application/xhtml+xml": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateTemplate_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"file"
								],
								"type": "object",
								"properties": {
									"file": {
										"$ref": "#/components/schemas/FormDataContentDisposition"
									},
									"description": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteMailTemplate",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "isMailTemplateExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/myself": {
			"get": {
				"operationId": "getAccount",
				"parameters": [
					{
						"name": "Accept-Language",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "token",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "loginUser",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "logoutUser",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/routeStepsCharsets": {
			"get": {
				"operationId": "getAvailableCharsets_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/routeStepsMetadata": {
			"get": {
				"operationId": "getRouteStepsMetadata_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/routes": {
			"get": {
				"operationId": "getRoutes_1",
				"parameters": [
					{
						"name": "businessUnit",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "referredByRoute",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createRoute_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/routes/{id}": {
			"get": {
				"operationId": "getRoute_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateRoute_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteRoute_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "routeExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "patchRoute_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/sessions": {
			"get": {
				"operationId": "getSessions_1",
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "type",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "localDaemonReturn",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/sessions/{id}": {
			"get": {
				"operationId": "getSession_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "killSession_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "localDaemonReturn",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/sessions/statistics/bandwidth": {
			"get": {
				"operationId": "readBandwidthInfoByLogin_1",
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/sessions/statistics/userClass": {
			"get": {
				"operationId": "getSessionsInfo_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/sites": {
			"get": {
				"operationId": "getSites_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createSite_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseSite"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/sites/{id}": {
			"get": {
				"operationId": "getSite_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateSiteProperties_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseSite"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteSite_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "siteExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateSiteProperties_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/sites/operations": {
			"post": {
				"operationId": "testConnection_2",
				"parameters": [
					{
						"name": "operation",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalConnection"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/siteTemplates": {
			"get": {
				"operationId": "getSiteTemplates_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createSiteTemplate_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseSiteTemplate"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/siteTemplates/{id}": {
			"get": {
				"operationId": "getSiteTemplate_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateSiteTemplate_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseSiteTemplate"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteSiteTemplate_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "siteTemplateExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateSiteTemplate_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/transferProfiles": {
			"get": {
				"operationId": "getTransferProfiles_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createTransferProfile_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalTransferProfile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/transferProfiles/{id}": {
			"get": {
				"operationId": "getTransferProfile_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateTransferProfile_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalTransferProfile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteTransferProfile_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "transferProfileExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateTransferProfile_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/transfers/operations": {
			"post": {
				"operationId": "serverOperations",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseTransfer"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/subscriptions": {
			"get": {
				"operationId": "getSubscriptions_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createSubscription_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseSubscription"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/subscriptions/{id}": {
			"get": {
				"operationId": "getSubscription_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateSubscription_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseSubscription"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteSubscription_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "purge",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "subscriptionExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "patchSubscription_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/version": {
			"get": {
				"operationId": "getSTVersion_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/addressBook/sources": {
			"get": {
				"operationId": "getAddressBookSources_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/addressBook/sources/{id}": {
			"get": {
				"operationId": "getAddressBookSource_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateAddressBookSource_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalAddressBookGlobalSource"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "addressBookSourceExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateAddressBookSource_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/userClasses": {
			"get": {
				"operationId": "getUserClasses_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createUserClass_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalUserClass"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/userClasses/{id}": {
			"get": {
				"operationId": "getUserClass_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateUserClass_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalUserClass"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteUserClass_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "userClassExists_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateUserClass_1",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/administrators": {
			"get": {
				"operationId": "getAdministrators_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createAdministrator_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalAdministrator"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/administrators/{name}": {
			"get": {
				"operationId": "getAdministrator_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateAdministrator_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalAdministrator"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteAdministrator_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "administratorExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateAdmin_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/administrativeRoles": {
			"get": {
				"operationId": "getAdministrativeRoles_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createAdministrativeRole_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalAdministrativeRole"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/administrativeRoles/{name}": {
			"get": {
				"operationId": "getAdministrativeRole_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateAdministrativeRole_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalAdministrativeRole"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteAdministrativeRole_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "targetRoleName",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"head": {
				"operationId": "administrativeRoleExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateRole_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/servers": {
			"get": {
				"operationId": "getServers_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createServer_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseServerConfiguration"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/servers/{name}": {
			"get": {
				"operationId": "getServer_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateServer_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseServerConfiguration"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteServer_2",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "serverExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateServer_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/servers/operations": {
			"post": {
				"operationId": "serverOperation_1",
				"parameters": [
					{
						"name": "serverName",
						"in": "query",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "timeout",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/daemons": {
			"get": {
				"operationId": "getDaemonsStatus_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/daemons/operations": {
			"post": {
				"operationId": "daemonOperation_1",
				"parameters": [
					{
						"name": "daemon",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "timeout",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "graceful",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/statisticsSummary/generateReport": {
			"get": {
				"operationId": "generateStatisticsSummariesReport",
				"parameters": [
					{
						"name": "startDate",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "endDate",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/clusterServices": {
			"get": {
				"operationId": "getServiceStatus_1",
				"parameters": [
					{
						"name": "serviceName",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/clusterServices/operations": {
			"post": {
				"operationId": "clusterServiceOperation_1",
				"parameters": [
					{
						"name": "serviceName",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/transactionManager": {
			"get": {
				"operationId": "getStatus",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/transactionManager/operations": {
			"post": {
				"operationId": "stopGracefully",
				"parameters": [
					{
						"name": "timeout",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "graceful",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/configurations/options": {
			"get": {
				"operationId": "getOptions_1",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "readOnly",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "isLocal",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/configurations/options/{name}": {
			"get": {
				"operationId": "getOption_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"head": {
				"operationId": "optionExists_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "updateOptionValue_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/database": {
			"get": {
				"operationId": "getDatabaseConfiguration_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateDatabaseConfigurations_1",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"password",
									"username"
								],
								"type": "object",
								"properties": {
									"username": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"host": {
										"type": "string"
									},
									"port": {
										"type": "string"
									},
									"databaseName": {
										"type": "string"
									},
									"useCustomJdbcUrl": {
										"type": "boolean"
									},
									"jdbcUrlTemplate": {
										"type": "string"
									},
									"secureConnectionEnabled": {
										"type": "boolean"
									},
									"enabledProtocols": {
										"type": "string"
									},
									"serverCertificateDn": {
										"type": "string"
									},
									"certificateFile": {
										"$ref": "#/components/schemas/FormDataContentDisposition"
									},
									"enabledCipherSuites": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/configurations/database/{componentType}": {
			"get": {
				"operationId": "getDatabaseConfigurations_1",
				"parameters": [
					{
						"name": "componentType",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateDatabaseConfigurations",
				"parameters": [
					{
						"name": "componentType",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"host",
									"password",
									"port",
									"username"
								],
								"type": "object",
								"properties": {
									"username": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"host": {
										"type": "string"
									},
									"port": {
										"type": "string"
									},
									"databaseName": {
										"type": "string"
									},
									"useCustomJdbcUrl": {
										"type": "boolean"
									},
									"jdbcUrlTemplate": {
										"type": "string"
									},
									"secureConnectionEnabled": {
										"type": "boolean"
									},
									"enabledProtocols": {
										"type": "string"
									},
									"serverCertificateDn": {
										"type": "string"
									},
									"certificateFile": {
										"$ref": "#/components/schemas/FormDataContentDisposition"
									},
									"enabledCipherSuites": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/configurations/database/operations": {
			"post": {
				"operationId": "databaseConfigurationOperation",
				"parameters": [
					{
						"name": "operation",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "numberOfPartitions",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"username": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"host": {
										"type": "string"
									},
									"port": {
										"type": "string"
									},
									"databaseName": {
										"type": "string"
									},
									"useCustomJdbcUrl": {
										"type": "boolean"
									},
									"jdbcUrlTemplate": {
										"type": "string"
									},
									"secureConnectionEnabled": {
										"type": "boolean"
									},
									"serverCertificateDn": {
										"type": "string"
									},
									"enabledProtocols": {
										"type": "string"
									},
									"enabledCipherSuites": {
										"type": "string"
									},
									"certificateFile": {
										"$ref": "#/components/schemas/FormDataContentDisposition"
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/configurations/sentinel": {
			"get": {
				"operationId": "getSentinelConfig_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateSentinelConfig_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalSentinelConfiguration"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateSentinelConfig_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/configurations/loginSettings": {
			"get": {
				"operationId": "getLoginSettings_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateLoginSettings_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalBaseBackendLoginSettings"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateLoginSettings_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/allowedSTServers": {
			"get": {
				"operationId": "getAllowedSTServers_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateAllowedSTServers_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"properties": {
									"empty": {
										"type": "boolean"
									}
								},
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateAllowedSTServers_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/keystorePassword": {
			"put": {
				"operationId": "changeKeystorePassword_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalKeystorePassword"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/fileArchiving": {
			"get": {
				"operationId": "getFileArchivingConfig_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateFileArchivingConfig_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalFileArchivingConfiguration"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateFileArchivingConfig_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/clusterManagement": {
			"get": {
				"operationId": "getServersInfo",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "addServer_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalServerAddress"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/clusterManagement/{serverAddress}": {
			"get": {
				"operationId": "getServerInfo",
				"parameters": [
					{
						"name": "serverAddress",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteServer_1",
				"parameters": [
					{
						"name": "serverAddress",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "serverAddressExist",
				"parameters": [
					{
						"name": "serverAddress",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/configurations/clusterManagement/nodeThreshold": {
			"get": {
				"operationId": "getNodeThreshold_1",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateNodeThreshold_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalNodeThreshold"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateNodeThreshold_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/clusterManagement/{serverAddress}/operations": {
			"post": {
				"operationId": "bounceServer_1",
				"parameters": [
					{
						"name": "serverAddress",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/configurations/clusterManagement/operations": {
			"post": {
				"operationId": "serverOperations_1",
				"parameters": [
					{
						"name": "operation",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/accountSetup": {
			"post": {
				"operationId": "createFlows",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalFlow"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {},
							"multipart/mixed": {}
						}
					}
				}
			}
		},
		"/accountSetup/{name}": {
			"get": {
				"operationId": "getAccountSetup",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {},
							"multipart/mixed": {}
						}
					}
				}
			}
		},
		"/cs/h2h/data/{pkgId}/{attId}": {
			"get": {
				"operationId": "download",
				"parameters": [
					{
						"name": "pkgId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "attId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"put": {
				"operationId": "upload",
				"parameters": [
					{
						"name": "Content-MD5",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "pkgId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "attId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "checkUpload",
				"parameters": [
					{
						"name": "pkgId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "attId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/cs/h2h/data": {
			"head": {
				"operationId": "authenticate",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/cs/h2h/control/packages/attrs/uid/{uid}": {
			"get": {
				"operationId": "getPackageInfoByUid",
				"parameters": [
					{
						"name": "uid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "includeAttachments",
						"in": "query",
						"schema": {
							"type": "boolean",
							"default": true
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/cs/h2h/control/packages/{packageId}/ops/downloadHistory": {
			"get": {
				"operationId": "getPackageDownloadHistory",
				"parameters": [
					{
						"name": "CommunityId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "packageId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/cs/h2h/control/packages": {
			"post": {
				"operationId": "createPackage",
				"parameters": [
					{
						"name": "CommunityId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/PackageCreationRequest"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"head": {
				"operationId": "isPackageResourceAvailable",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/cs/h2h/control/packages/ops/delete": {
			"post": {
				"operationId": "deletePackages",
				"parameters": [
					{
						"name": "CommunityId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "useUids",
						"in": "query",
						"schema": {
							"type": "boolean",
							"default": false
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/PackageDeletionRequest"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/cs/h2h/control/packages/{packageId}/ops/cancel": {
			"post": {
				"operationId": "cancelPackage",
				"parameters": [
					{
						"name": "packageId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/cs/h2h/control/packages/{packageId}": {
			"get": {
				"operationId": "getPackageInfo",
				"parameters": [
					{
						"name": "CommunityId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "packageId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "includeAttachments",
						"in": "query",
						"schema": {
							"type": "boolean",
							"default": true
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/drw/corecmp/entity/server/restapi/userpreference/communities": {
			"post": {
				"operationId": "getCommunitiesForConnectedUser",
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/navigation": {
			"get": {
				"operationId": "getMenuBar",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserMenuBar"
								}
							}
						}
					}
				}
			}
		},
		"/navigation/nodeStatus": {
			"get": {
				"operationId": "getClusterNodeType",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/tmPackages/{packageName}": {
			"delete": {
				"operationId": "deleteTMPackage",
				"parameters": [
					{
						"name": "packageName",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/tmPackages/exportedPackages": {
			"post": {
				"operationId": "exportTMPackages",
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"type": "object",
								"properties": {
									"packageNames": {
										"type": "string",
										"default": ""
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/tmPackages/agents": {
			"get": {
				"operationId": "getAgents",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"post": {
				"operationId": "installAgents",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/FormDataMultiPart"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/tmPackages": {
			"get": {
				"operationId": "getTMPackages",
				"parameters": [
					{
						"name": "sortField",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "order",
						"in": "query",
						"schema": {
							"type": "string",
							"default": "asc"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"put": {
				"operationId": "switchTMPackages",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ExternalTMPackage"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/tmPackages/import": {
			"post": {
				"operationId": "importTMPackages",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/FormDataMultiPart"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/tmPackages/functions": {
			"post": {
				"operationId": "installFunctions",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/FormDataMultiPart"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/tmPackages/attributes": {
			"get": {
				"operationId": "getAttributes",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/fileOperations": {
			"post": {
				"operationId": "createFileOperation",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalAsyncOperation"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/fileOperations/{id}": {
			"get": {
				"operationId": "getFileOperation",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateFileContent",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "postFileContent",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteFileOperation",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/files/{filepath}": {
			"get": {
				"operationId": "getFiles",
				"parameters": [
					{
						"name": "filepath",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sortBy",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "order",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "transferMode",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "metadata",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "showdots",
						"in": "query",
						"schema": {
							"type": "boolean",
							"default": true
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "updateMetadata",
				"parameters": [
					{
						"name": "filepath",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/ExternalFile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createFile",
				"parameters": [
					{
						"name": "filepath",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "transferMode",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalFile"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "deleteFile",
				"parameters": [
					{
						"name": "filepath",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			},
			"patch": {
				"operationId": "partiallyUpdateMetadata",
				"parameters": [
					{
						"name": "filepath",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"additionalProperties": {
										"type": "object"
									}
								}
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/files": {
			"get": {
				"operationId": "getHomeDirectory",
				"parameters": [
					{
						"name": "sortBy",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "order",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "transferMode",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "metadata",
						"in": "query",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "showdots",
						"in": "query",
						"schema": {
							"type": "boolean",
							"default": true
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"operationId": "createFile_1",
				"parameters": [
					{
						"name": "transferMode",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalFile"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/myself/secretQuestion": {
			"get": {
				"operationId": "getSecretQuestion",
				"parameters": [
					{
						"name": "token",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"operationId": "setSecretQuestion",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalSecretQuestionRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/myself/passwordExpired": {
			"get": {
				"operationId": "getPasswordExpired",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/myself/addressBook": {
			"get": {
				"operationId": "getAddressBookEntries",
				"parameters": [
					{
						"name": "searchFor",
						"in": "query",
						"schema": {
							"type": "string",
							"default": ""
						}
					},
					{
						"name": "displayName",
						"in": "query",
						"schema": {
							"type": "string",
							"default": ""
						}
					},
					{
						"name": "mail",
						"in": "query",
						"schema": {
							"type": "string",
							"default": ""
						}
					},
					{
						"name": "parentGroup",
						"in": "query",
						"schema": {
							"type": "string",
							"default": ""
						}
					},
					{
						"name": "type",
						"in": "query",
						"schema": {
							"type": "string",
							"default": ""
						}
					},
					{
						"name": "orderBy",
						"in": "query",
						"schema": {
							"type": "string",
							"default": "displayName"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32",
							"default": 0
						}
					},
					{
						"name": "offset",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32",
							"default": 0
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/myself/addressBook/{id}": {
			"get": {
				"operationId": "getAddressBookEntryById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/myself/password": {
			"post": {
				"operationId": "passwordOperations",
				"parameters": [
					{
						"name": "operation",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalPassword"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"*/*": {}
						}
					}
				}
			}
		},
		"/secretQuestions": {
			"get": {
				"operationId": "getSecretQuestionsOption",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/serverTime": {
			"get": {
				"operationId": "pollServerTime",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/transfers": {
			"get": {
				"operationId": "getTransfers",
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"schema": {
							"type": "integer",
							"format": "int32",
							"default": 0
						}
					},
					{
						"name": "file",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "site",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "status",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "startTimeBefore",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "startTimeAfter",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "endTimeBefore",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "endTimeAfter",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "actionBy",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "protocol",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "application",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "direction",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "secure",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "resubmitted",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "coreId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operationIndex",
						"in": "query",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/transfers/{id}/operations": {
			"post": {
				"operationId": "serverOperation",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/transfers/{id}": {
			"get": {
				"operationId": "getTransfer",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/application.wadl": {
			"get": {
				"operationId": "getWadl",
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/vnd.sun.wadl+xml": {},
							"application/xml": {}
						}
					}
				}
			}
		},
		"/application.wadl/{path}": {
			"get": {
				"operationId": "getExternalGrammar",
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"description": "default response",
						"content": {
							"application/xml": {}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"ExpirationType": {
				"type": "object",
				"properties": {
					"expirationTimestamp": {
						"type": "integer",
						"format": "int64"
					},
					"type": {
						"type": "string"
					}
				}
			},
			"PackageAttachmentCreationRequest": {
				"type": "object",
				"properties": {
					"size": {
						"type": "integer",
						"format": "int64"
					},
					"contentType": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				}
			},
			"PackageCreationRequest": {
				"type": "object",
				"properties": {
					"recipientsEmails": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"smtpNotifications": {
						"type": "boolean"
					},
					"notifyDownload": {
						"type": "boolean"
					},
					"subject": {
						"type": "string"
					},
					"body": {
						"type": "string"
					},
					"attachmentCreationRequests": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/PackageAttachmentCreationRequest"
						}
					},
					"expirationType": {
						"$ref": "#/components/schemas/ExpirationType"
					},
					"sendToCommunity": {
						"type": "boolean"
					}
				}
			},
			"PackageDeletionRequest": {
				"type": "object",
				"properties": {
					"packageIds": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"UserMenu": {
				"type": "object",
				"properties": {
					"menuItems": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserMenuItem"
						}
					},
					"title": {
						"type": "string"
					},
					"order": {
						"type": "integer",
						"format": "int32",
						"writeOnly": true
					}
				}
			},
			"UserMenuBar": {
				"type": "object",
				"properties": {
					"authExternal": {
						"type": "boolean"
					},
					"user": {
						"type": "string"
					},
					"isClusterEnabled": {
						"type": "boolean"
					},
					"isPrimaryNode": {
						"type": "boolean"
					},
					"isBouncePermitted": {
						"type": "boolean"
					},
					"menus": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserMenu"
						}
					}
				}
			},
			"UserMenuItem": {
				"type": "object",
				"properties": {
					"action": {
						"type": "string"
					},
					"title": {
						"type": "string"
					}
				}
			},
			"BodyPart": {
				"type": "object",
				"properties": {
					"contentDisposition": {
						"$ref": "#/components/schemas/ContentDisposition"
					},
					"entity": {
						"type": "object"
					},
					"headers": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"mediaType": {
						"type": "object",
						"properties": {
							"type": {
								"type": "string"
							},
							"subtype": {
								"type": "string"
							},
							"parameters": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							},
							"wildcardType": {
								"type": "boolean"
							},
							"wildcardSubtype": {
								"type": "boolean"
							}
						}
					},
					"messageBodyWorkers": {
						"$ref": "#/components/schemas/MessageBodyWorkers"
					},
					"parent": {
						"$ref": "#/components/schemas/MultiPart"
					},
					"providers": {
						"type": "object"
					},
					"parameterizedHeaders": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ParameterizedHeader"
							}
						}
					}
				}
			},
			"ContentDisposition": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string"
					},
					"parameters": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"fileName": {
						"type": "string"
					},
					"creationDate": {
						"type": "string",
						"format": "date-time"
					},
					"modificationDate": {
						"type": "string",
						"format": "date-time"
					},
					"readDate": {
						"type": "string",
						"format": "date-time"
					},
					"size": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"MessageBodyWorkers": {
				"type": "object"
			},
			"MultiPart": {
				"type": "object",
				"properties": {
					"contentDisposition": {
						"$ref": "#/components/schemas/ContentDisposition"
					},
					"entity": {
						"type": "object"
					},
					"headers": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"mediaType": {
						"type": "object",
						"properties": {
							"type": {
								"type": "string"
							},
							"subtype": {
								"type": "string"
							},
							"parameters": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							},
							"wildcardType": {
								"type": "boolean"
							},
							"wildcardSubtype": {
								"type": "boolean"
							}
						}
					},
					"messageBodyWorkers": {
						"$ref": "#/components/schemas/MessageBodyWorkers"
					},
					"parent": {
						"$ref": "#/components/schemas/MultiPart"
					},
					"providers": {
						"type": "object"
					},
					"bodyParts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BodyPart"
						}
					},
					"parameterizedHeaders": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ParameterizedHeader"
							}
						}
					}
				}
			},
			"ParameterizedHeader": {
				"type": "object",
				"properties": {
					"value": {
						"type": "string"
					},
					"parameters": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}
			},
			"AccountMaintenanceSettings": {
				"type": "object",
				"properties": {
					"policy": {
						"pattern": "^((default)|(custom)|(disabled))$",
						"type": "string"
					},
					"policyModifyingAllowed": {
						"type": "boolean"
					},
					"criteria": {
						"$ref": "#/components/schemas/Criteria"
					},
					"action": {
						"$ref": "#/components/schemas/Action"
					},
					"emailNotificationBeforeAction": {
						"$ref": "#/components/schemas/EmailNotificationBeforeAction"
					},
					"emailNotificationForUserPassword": {
						"$ref": "#/components/schemas/EmailNotificationForUserPassword"
					},
					"emailNotificationForUserCertificate": {
						"$ref": "#/components/schemas/EmailNotificationForUserCertificate"
					}
				}
			},
			"Action": {
				"type": "object",
				"properties": {
					"action": {
						"pattern": "^((DELETE)|(DISABLE)|(PURGE))$",
						"type": "string"
					},
					"daysDeleteDisabled": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"AdditionalProperties": {
				"type": "object",
				"properties": {
					"appcycid": {
						"type": "string"
					},
					"appobjid": {
						"type": "string"
					},
					"direction": {
						"type": "string"
					},
					"getfName": {
						"type": "string"
					},
					"freeMsg": {
						"type": "string"
					},
					"ida": {
						"type": "string"
					},
					"ipart": {
						"type": "string"
					},
					"maxDate": {
						"type": "string"
					},
					"maxTime": {
						"type": "string"
					},
					"minDate": {
						"type": "string"
					},
					"minTime": {
						"type": "string"
					},
					"nfName": {
						"type": "string"
					},
					"getnIdf": {
						"type": "string"
					},
					"pri": {
						"type": "string"
					},
					"rappl": {
						"type": "string"
					},
					"getrUser": {
						"type": "string"
					},
					"sappl": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"getsUser": {
						"type": "string"
					},
					"trk": {
						"type": "string"
					}
				}
			},
			"AddressBookSettings": {
				"type": "object",
				"properties": {
					"addressBookBaseDN": {
						"type": "string"
					},
					"addressBookQuery": {
						"type": "string"
					},
					"shouldUseOnlyAdditionalQuery": {
						"type": "boolean"
					}
				}
			},
			"AdhocSettings": {
				"required": [
					"enrollmentTypes"
				],
				"type": "object",
				"properties": {
					"deliveryMethod": {
						"type": "string",
						"enum": [
							"DISABLED",
							"DEFAULT",
							"ANONYMOUS",
							"ACCOUNT_WITHOUT_ENROLLMENT",
							"ACCOUNT_WITH_ENROLLMENT",
							"CUSTOM"
						]
					},
					"enrollmentTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"implicitEnrollmentType": {
						"type": "string",
						"enum": [
							"ANONYMOUS_LINK",
							"CHALLENGED_LINK",
							"EXISTING_ACCOUNT",
							"ENROLL_UNLICENSED",
							"ENROLL_LICENSED",
							"ENROLL_MOBILE"
						]
					}
				}
			},
			"BandwidthLimits": {
				"type": "object",
				"properties": {
					"policy": {
						"pattern": "^((default)|(custom)|(disabled))$",
						"type": "string"
					},
					"modifyLimitsAllowed": {
						"type": "boolean"
					},
					"inboundLimit": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					},
					"outboundLimit": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"Criteria": {
				"type": "object",
				"properties": {
					"daysAfterCreation": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"daysOfInactivity": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"specificDate": {
						"pattern": "(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d",
						"type": "string"
					}
				}
			},
			"EmailNotificationBeforeAction": {
				"type": "object",
				"properties": {
					"notifyDays": {
						"type": "string"
					},
					"notifyAccount": {
						"type": "boolean"
					},
					"notifyEmails": {
						"type": "string"
					},
					"emailTemplate": {
						"type": "string"
					}
				}
			},
			"EmailNotificationForUserCertificate": {
				"type": "object",
				"properties": {
					"notifyDays": {
						"type": "string"
					},
					"notifyAccount": {
						"type": "boolean"
					},
					"notifyEmails": {
						"type": "string"
					},
					"emailTemplate": {
						"type": "string"
					}
				}
			},
			"EmailNotificationForUserPassword": {
				"type": "object",
				"properties": {
					"notifyDays": {
						"type": "string"
					},
					"notifyAccount": {
						"type": "boolean"
					},
					"notifyEmails": {
						"type": "string"
					},
					"emailTemplate": {
						"type": "string"
					}
				}
			},
			"ExternalAccount": {
				"required": [
					"authByEmail",
					"gid",
					"isUnlicensedUserAllowedToReply",
					"name",
					"uid",
					"unlicensed"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseAccount"
					},
					{
						"type": "object",
						"properties": {
							"unlicensed": {
								"type": "boolean"
							},
							"isUnlicensedUserAllowedToReply": {
								"type": "boolean"
							},
							"routingMode": {
								"pattern": "^((accept)|(reject)|(ignore))$",
								"type": "string"
							},
							"user": {
								"$ref": "#/components/schemas/ExternalUser"
							},
							"addressBookSettings": {
								"$ref": "#/components/schemas/AddressBookSettings"
							},
							"accountMaintenanceSettings": {
								"$ref": "#/components/schemas/AccountMaintenanceSettings"
							},
							"fileMaintenanceSettings": {
								"$ref": "#/components/schemas/FileMaintenanceSettings"
							},
							"bandwidthLimits": {
								"$ref": "#/components/schemas/BandwidthLimits"
							}
						}
					}
				]
			},
			"ExternalAccountCertificate": {
				"required": [
					"account",
					"keyName",
					"keySize",
					"type",
					"validity"
				],
				"type": "object",
				"properties": {
					"alias": {
						"type": "string"
					},
					"keySize": {
						"type": "integer",
						"format": "int32"
					},
					"validity": {
						"type": "integer",
						"format": "int32"
					},
					"keyName": {
						"type": "string"
					},
					"accessLevel": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"certificatePassword": {
						"type": "string"
					},
					"generate": {
						"type": "boolean"
					},
					"type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalAccountCertificates": {
				"type": "object",
				"properties": {
					"login": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalAccountCertificate"
						}
					},
					"partner": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalAccountCertificate"
						}
					},
					"private": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalAccountCertificate"
						}
					}
				}
			},
			"ExternalAccountContact": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					}
				}
			},
			"ExternalAccountPGPCertificate": {
				"required": [
					"account",
					"keyName",
					"keySize",
					"validity"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalAccountCertificate"
					},
					{
						"type": "object",
						"properties": {
							"fullName": {
								"type": "string"
							},
							"keyType": {
								"type": "string"
							},
							"email": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalAccountSSHCertificate": {
				"required": [
					"account",
					"keyName",
					"keySize",
					"validity"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalAccountCertificate"
					},
					{
						"type": "object",
						"properties": {
							"caPassword": {
								"type": "string"
							},
							"signatureAlgorithm": {
								"type": "string"
							},
							"subject": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalAccountSetup": {
				"type": "object",
				"properties": {
					"account": {
						"$ref": "#/components/schemas/ExternalBaseAccount"
					},
					"certificates": {
						"$ref": "#/components/schemas/ExternalAccountCertificates"
					},
					"sites": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalBaseSite"
						}
					},
					"transferProfiles": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalTransferProfile"
						}
					},
					"routes": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalRoute"
						}
					},
					"subscriptions": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalBaseSubscription"
						}
					}
				}
			},
			"ExternalAccountTemplate": {
				"required": [
					"authByEmail",
					"gid",
					"isUnlicensedUserAllowedToReply",
					"name",
					"templateClass",
					"uid"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseAccount"
					},
					{
						"type": "object",
						"properties": {
							"isUnlicensedUserAllowedToReply": {
								"type": "boolean"
							},
							"enrolledWithExternalPass": {
								"type": "boolean"
							},
							"templateClass": {
								"type": "string"
							},
							"addressBookSettings": {
								"$ref": "#/components/schemas/AddressBookSettings"
							},
							"fileMaintenanceSettings": {
								"$ref": "#/components/schemas/FileMaintenanceSettings"
							},
							"bandwidthLimits": {
								"$ref": "#/components/schemas/BandwidthLimits"
							}
						}
					}
				]
			},
			"ExternalAccountX509Certificate": {
				"required": [
					"account",
					"keyName",
					"keySize",
					"validity"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalAccountCertificate"
					},
					{
						"type": "object",
						"properties": {
							"caPassword": {
								"type": "string"
							},
							"signatureAlgorithm": {
								"type": "string"
							},
							"subject": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalAddressBookContact": {
				"required": [
					"fullName",
					"primaryEmail"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"fullName": {
						"type": "string"
					},
					"primaryEmail": {
						"type": "string"
					}
				}
			},
			"ExternalAddressBookSource": {
				"required": [
					"enabled",
					"id",
					"name",
					"parentGroup",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"name": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"Local",
							"LDAP",
							"Custom"
						]
					},
					"parentGroup": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"customProperties": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}
			},
			"ExternalAdhocSite": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"toEmailAddresses": {
								"type": "string"
							},
							"ccEmailAddresses": {
								"type": "string"
							},
							"bccEmailAddresses": {
								"type": "string"
							},
							"subject": {
								"type": "string"
							},
							"body": {
								"type": "string"
							},
							"securityLevel": {
								"type": "string"
							},
							"notificationTemplate": {
								"type": "string"
							},
							"challenge": {
								"type": "string"
							},
							"expiration": {
								"type": "integer",
								"format": "int32"
							},
							"response": {
								"type": "string"
							},
							"confirmResponse": {
								"type": "string"
							},
							"sendAs": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalAdvancedRoutingSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"postClientDownloads",
					"postProcessingActions",
					"postTransmissionActions",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					},
					{
						"type": "object",
						"properties": {
							"postClientDownloads": {
								"$ref": "#/components/schemas/ExternalPostClientDownloads"
							},
							"postProcessingActions": {
								"$ref": "#/components/schemas/ExternalPostProcessingActions"
							},
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalSubscriptionPostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalAs2PostTransmissionAction": {
				"type": "object",
				"properties": {
					"doAsIn": {
						"type": "string"
					},
					"doAsOut": {
						"type": "string"
					},
					"requireSign": {
						"type": "boolean"
					},
					"requireEncrypt": {
						"type": "boolean"
					},
					"requireSsl": {
						"type": "boolean"
					},
					"enableChunked": {
						"type": "boolean"
					},
					"mimeType": {
						"type": "string"
					},
					"subject": {
						"type": "string"
					},
					"transferTimeout": {
						"type": "integer",
						"format": "int32"
					},
					"compress": {
						"type": "boolean"
					},
					"encrypt": {
						"type": "string"
					},
					"sign": {
						"type": "string"
					},
					"as2MdnReturnUrl": {
						"type": "string"
					},
					"as2MdnUrl": {
						"type": "boolean"
					},
					"as2MdnOptions": {
						"type": "string"
					}
				}
			},
			"ExternalAs2Site": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"senderAs2Id": {
								"type": "string"
							},
							"serverSigningCertificate": {
								"type": "string"
							},
							"serverEncryptionCertificate": {
								"type": "string"
							},
							"senderEmail": {
								"type": "string"
							},
							"receiverAs2Id": {
								"type": "string"
							},
							"remoteSigningCertificate": {
								"type": "string"
							},
							"remoteEncryptionCertificate": {
								"type": "string"
							},
							"receiverEmail": {
								"type": "string"
							},
							"as2Url": {
								"type": "string"
							},
							"transferSettings": {
								"$ref": "#/components/schemas/ExternalAs2PostTransmissionAction"
							},
							"fipsMode": {
								"type": "boolean"
							},
							"dmz": {
								"type": "string"
							},
							"cipherSuites": {
								"type": "string"
							},
							"protocols": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalBaseAccount": {
				"required": [
					"authByEmail",
					"gid",
					"name",
					"type",
					"uid"
				],
				"type": "object",
				"properties": {
					"name": {
						"maxLength": 80,
						"minLength": 0,
						"pattern": "^(([^\\/\\;\\']*))$",
						"type": "string"
					},
					"homeFolder": {
						"type": "string"
					},
					"lastModified": {
						"type": "string"
					},
					"homeFolderAccessLevel": {
						"type": "string",
						"enum": [
							"PRIVATE",
							"BUSINESS_UNIT",
							"PUBLIC"
						]
					},
					"uid": {
						"type": "string"
					},
					"gid": {
						"type": "string"
					},
					"mappedUser": {
						"type": "string"
					},
					"disabled": {
						"type": "boolean"
					},
					"skin": {
						"pattern": "^((Default HTML Template)|(Axway Jelly Ball 9)|(Axway Box and Stripe in Blue)|(ST Web Client)|(SecureTransport Legacy Client))$",
						"type": "string"
					},
					"notes": {
						"maxLength": 2048,
						"minLength": 0,
						"type": "string"
					},
					"authByEmail": {
						"type": "boolean"
					},
					"businessUnit": {
						"type": "string"
					},
					"loginRestrictionPolicy": {
						"type": "string"
					},
					"contact": {
						"$ref": "#/components/schemas/ExternalAccountContact"
					},
					"accountCreationDate": {
						"type": "integer",
						"format": "int64"
					},
					"transfersWebServiceAllowed": {
						"type": "boolean"
					},
					"accountEncryptMode": {
						"type": "string",
						"enum": [
							"ENABLED",
							"UNSPECIFIED"
						]
					},
					"fileArchivingPolicy": {
						"type": "string",
						"enum": [
							"default",
							"enabled",
							"disabled"
						]
					},
					"transferType": {
						"pattern": "^((N)|(I)|(E))$",
						"type": "string"
					},
					"accountSubmitForApprove": {
						"type": "boolean"
					},
					"rejectReason": {
						"maxLength": 2048,
						"minLength": 0,
						"type": "string"
					},
					"accountVerificationStatus": {
						"type": "string"
					},
					"adhocSettings": {
						"$ref": "#/components/schemas/AdhocSettings"
					},
					"additionalAttributes": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					},
					"type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalBaseRouteStep": {
				"required": [
					"autostart",
					"status",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"type": {
						"maxLength": 64,
						"minLength": 0,
						"type": "string"
					},
					"status": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string",
						"enum": [
							"DISABLED",
							"ENABLED"
						]
					},
					"autostart": {
						"type": "boolean"
					},
					"precedingStep": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalBaseSchedule": {
				"required": [
					"tag",
					"type"
				],
				"type": "object",
				"properties": {
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"skipHolidays": {
						"type": "boolean"
					},
					"tag": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalBaseSite": {
				"required": [
					"account",
					"name",
					"protocol",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"protocol": {
						"type": "string"
					},
					"transferType": {
						"pattern": "^((?i)(internal)|(partner)|(unspecified))$",
						"type": "string"
					},
					"maxConcurrentConnection": {
						"maximum": 65535,
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					},
					"accessLevel": {
						"type": "string",
						"enum": [
							"PRIVATE",
							"BUSINESS_UNIT",
							"PUBLIC"
						]
					},
					"account": {
						"type": "string"
					},
					"siteTemplate": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					},
					"alternativeAddresses": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalSiteAlternativeAddress"
						}
					},
					"default": {
						"type": "boolean"
					},
					"type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalBaseSitePostTransmissionActions": {
				"type": "object",
				"properties": {
					"doAsOut": {
						"type": "string"
					},
					"deleteOnTempFailOut": {
						"type": "boolean"
					},
					"deleteOnPermFailOut": {
						"type": "boolean"
					},
					"doAsIn": {
						"type": "string"
					},
					"deleteOnPermFailIn": {
						"type": "boolean"
					},
					"deleteOnSuccessIn": {
						"type": "boolean"
					}
				}
			},
			"ExternalBaseSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"application": {
						"type": "string"
					},
					"maxParallelSitPulls": {
						"type": "integer",
						"format": "int32"
					},
					"flowAttrsMergeMode": {
						"type": "string"
					},
					"folderMonitorScheduleCheck": {
						"type": "boolean"
					},
					"flowName": {
						"type": "string"
					},
					"scheduledFolderMonitor": {
						"type": "string"
					},
					"templateAdvancedExpression": {
						"type": "boolean"
					},
					"flowAttributes": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"schedules": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalBaseSchedule"
						}
					},
					"transferConfigurations": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalTransferConfiguration"
						}
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					},
					"subscriptionEncryptMode": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalBasicSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"postTransmissionActions",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					},
					{
						"type": "object",
						"properties": {
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalSubscriptionPostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalCharactersReplaceRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"findCharacterSequence",
					"inputCharset",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"findCharacterSequence": {
								"type": "string"
							},
							"inputCharset": {
								"type": "string"
							},
							"lineStrip": {
								"type": "string"
							},
							"outputCharset": {
								"type": "string"
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"replaceCharacterSequence": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalCompressRouteStep": {
				"required": [
					"autostart",
					"compressionLevel",
					"compressionType",
					"fileFilterExpression",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"compressionType": {
								"type": "string",
								"enum": [
									"ZIP",
									"JAR",
									"TAR",
									"GZIP"
								]
							},
							"compressionLevel": {
								"type": "string",
								"enum": [
									"STORE",
									"FASTEST",
									"FAST",
									"NORMAL",
									"GOOD",
									"BETTER",
									"BEST"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"singleArchiveName": {
								"type": "string"
							},
							"singleArchiveEnabled": {
								"type": "boolean"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							},
							"zipPassword": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalConnectDirectSite": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"localServerName": {
								"type": "string"
							},
							"localServerPort": {
								"type": "string"
							},
							"recScript": {
								"type": "string"
							},
							"sendScript": {
								"type": "string"
							},
							"userName": {
								"type": "string"
							},
							"usePassword": {
								"type": "boolean"
							},
							"usePasswordExpr": {
								"type": "boolean"
							},
							"password": {
								"type": "string"
							},
							"transferMode": {
								"pattern": "^((?i)(BINARY)|(ASCII)|(AUTO_DETECT))$",
								"type": "string"
							},
							"placeholders": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							}
						}
					}
				]
			},
			"ExternalCronExpressionSchedule": {
				"required": [
					"tag"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSchedule"
					},
					{
						"type": "object",
						"properties": {
							"cronExpression": {
								"type": "string"
							},
							"endDate": {
								"type": "string",
								"format": "date-time"
							}
						}
					}
				]
			},
			"ExternalDailySchedule": {
				"required": [
					"tag"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSchedule"
					},
					{
						"type": "object",
						"properties": {
							"dailyType": {
								"type": "string",
								"enum": [
									"EVERY_WEEKDAY",
									"EVERYDAY"
								]
							},
							"endDate": {
								"type": "string",
								"format": "date-time"
							},
							"executionTimes": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				]
			},
			"ExternalDataTransformation": {
				"required": [
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"asciiArmor": {
						"type": "boolean"
					},
					"compressionAlgorithm": {
						"type": "integer",
						"format": "int32"
					},
					"compressionLevel": {
						"type": "integer",
						"format": "int32"
					},
					"encryptEnabled": {
						"type": "boolean"
					},
					"pgpEnabled": {
						"type": "boolean"
					},
					"localSignCertificate": {
						"type": "string"
					},
					"originalNameExpression": {
						"type": "string"
					},
					"originalNameExpressionEnabled": {
						"type": "boolean"
					},
					"partnerEncryptCertificate": {
						"type": "string"
					},
					"requireEncryption": {
						"type": "boolean"
					},
					"requireSignature": {
						"type": "boolean"
					},
					"signingEnabled": {
						"type": "boolean"
					},
					"transformedNameExpression": {
						"type": "string"
					},
					"transformedNameExpressionEnabled": {
						"type": "boolean"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalDecompressRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							},
							"zipPassword": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalEncodingConversionRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"inputCharset",
					"outputCharset",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"inputCharset": {
								"type": "string"
							},
							"outputCharset": {
								"type": "string"
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalExecuteRouteStep": {
				"required": [
					"autostart",
					"status",
					"type"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"executeRoute": {
								"maxLength": 32,
								"minLength": 0,
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalFlow": {
				"type": "object",
				"properties": {
					"accountSetup": {
						"$ref": "#/components/schemas/ExternalAccountSetup"
					}
				}
			},
			"ExternalFolderMonitorSite": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"downloadFolder": {
								"type": "string"
							},
							"uploadFolder": {
								"type": "string"
							},
							"uploadFolderOverridable": {
								"type": "boolean"
							},
							"uploadFolderExpressionSupport": {
								"type": "boolean"
							},
							"uploadFolderAutocreate": {
								"type": "boolean"
							},
							"downloadPattern": {
								"type": "string"
							},
							"downloadPatternCaseSensitive": {
								"type": "boolean"
							},
							"downloadPatternType": {
								"type": "string"
							},
							"downloadSubfolderPattern": {
								"type": "string"
							},
							"downloadSubfolderPatternType": {
								"type": "string"
							},
							"downloadSubfolderPatternCaseSensitive": {
								"type": "boolean"
							},
							"downloadSubfolderMaxDepth": {
								"type": "integer",
								"format": "int32"
							},
							"downloadFolderAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"downloadPatternAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalLocalOnlyPostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalFtpSite": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"isSecure": {
								"type": "boolean"
							},
							"verifyCert": {
								"type": "boolean"
							},
							"ccc": {
								"type": "boolean"
							},
							"tlsShutdownCcc": {
								"type": "boolean"
							},
							"host": {
								"type": "string"
							},
							"port": {
								"type": "string"
							},
							"uploadCommand": {
								"pattern": "^((STOR)|(APPE))$",
								"type": "string"
							},
							"downloadFolder": {
								"type": "string"
							},
							"downloadFolderAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"downloadPattern": {
								"type": "string"
							},
							"downloadPatternAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"uploadFolder": {
								"type": "string"
							},
							"uploadFolderOverridable": {
								"type": "boolean"
							},
							"userName": {
								"type": "string"
							},
							"usePassword": {
								"type": "boolean"
							},
							"usePasswordExpr": {
								"type": "boolean"
							},
							"password": {
								"type": "string"
							},
							"clientCertificate": {
								"type": "string"
							},
							"transferMode": {
								"pattern": "^((?i)(BINARY)|(ASCII)|(AUTO_DETECT))$",
								"type": "string"
							},
							"siteCommand": {
								"type": "string"
							},
							"activeMode": {
								"type": "boolean"
							},
							"fipsMode": {
								"type": "boolean"
							},
							"dmz": {
								"type": "string"
							},
							"matchAnyLineTerminators": {
								"type": "boolean"
							},
							"cipherSuites": {
								"type": "string"
							},
							"protocols": {
								"type": "string"
							},
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalSitePostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalHourlySchedule": {
				"required": [
					"tag"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSchedule"
					},
					{
						"type": "object",
						"properties": {
							"executionTimes": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"hourlyStep": {
								"type": "integer",
								"format": "int64"
							},
							"hourlyType": {
								"type": "string",
								"enum": [
									"PERHOURS",
									"PERMINUTES"
								]
							},
							"endDate": {
								"type": "string",
								"format": "date-time"
							}
						}
					}
				]
			},
			"ExternalHttpSite": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"isSecure": {
								"type": "boolean"
							},
							"verifyCert": {
								"type": "boolean"
							},
							"useUri": {
								"type": "boolean"
							},
							"uri": {
								"type": "string"
							},
							"host": {
								"type": "string"
							},
							"port": {
								"type": "string"
							},
							"downloadFolder": {
								"type": "string"
							},
							"downloadFolderAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"downloadPattern": {
								"type": "string"
							},
							"downloadPatternAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"uploadFolder": {
								"type": "string"
							},
							"uploadFolderOverridable": {
								"type": "boolean"
							},
							"userName": {
								"type": "string"
							},
							"usePassword": {
								"type": "boolean"
							},
							"usePasswordExpr": {
								"type": "boolean"
							},
							"password": {
								"type": "string"
							},
							"clientCertificate": {
								"type": "string"
							},
							"fipsMode": {
								"type": "boolean"
							},
							"transferMode": {
								"pattern": "^((?i)(BINARY)|(ASCII)|(AUTO_DETECT))$",
								"type": "string"
							},
							"dmz": {
								"type": "string"
							},
							"requestMode": {
								"pattern": "^((GET)|(POST))$",
								"type": "string"
							},
							"cipherSuites": {
								"type": "string"
							},
							"protocols": {
								"type": "string"
							},
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalBaseSitePostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalHumanSystemSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"rules",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					},
					{
						"type": "object",
						"properties": {
							"rules": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/PackageRoutingRule"
								}
							}
						}
					}
				]
			},
			"ExternalLineEndingRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"inputCharset",
					"inputEolSequence",
					"outputEolSequence",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"inputCharset": {
								"type": "string"
							},
							"inputEolSequence": {
								"type": "string"
							},
							"outputCharset": {
								"type": "string"
							},
							"outputEolSequence": {
								"type": "string"
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalLineFoldingRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"fileFoldWidth",
					"inputCharset",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"fileFoldWidth": {
								"maximum": 2147483647,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"inputCharset": {
								"type": "string"
							},
							"outputCharset": {
								"type": "string"
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalLinePaddingRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"inputCharset",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"inputCharset": {
								"type": "string"
							},
							"linePaddingCharacter": {
								"pattern": "^\\\\\\\\u([0-9(a-f|A-F)]{4}){1}$",
								"type": "string"
							},
							"linePaddingLength": {
								"type": "string"
							},
							"outputCharset": {
								"type": "string"
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalLineTruncatingRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"inputCharset",
					"status",
					"truncateLength",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"inputCharset": {
								"type": "string"
							},
							"outputCharset": {
								"type": "string"
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"truncateLength": {
								"maximum": 2147483647,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalLinks": {
				"type": "object",
				"properties": {
					"links": {
						"type": "array",
						"items": {
							"type": "object"
						}
					},
					"linkDescriptions": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LinkDescription"
						}
					}
				}
			},
			"ExternalLocalOnlyPostTransmissionActions": {
				"type": "object",
				"properties": {
					"doAsIn": {
						"type": "string"
					},
					"doAsOut": {
						"type": "string"
					},
					"deleteOnPermFailOut": {
						"type": "boolean"
					},
					"moveOnPermFailOut": {
						"type": "string"
					},
					"moveOnSuccessOut": {
						"type": "string"
					}
				}
			},
			"ExternalMBFTSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					}
				]
			},
			"ExternalMetadata": {
				"type": "object",
				"properties": {
					"links": {
						"$ref": "#/components/schemas/ExternalLinks"
					}
				}
			},
			"ExternalMonthlySchedule": {
				"required": [
					"monthlyType",
					"tag"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSchedule"
					},
					{
						"type": "object",
						"properties": {
							"daysOfWeek": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string",
									"enum": [
										"SUNDAY",
										"MONDAY",
										"TUESDAY",
										"WEDNESDAY",
										"THURSDAY",
										"FRIDAY",
										"SATURDAY"
									]
								}
							},
							"daysOfMonth": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "integer",
									"format": "int32"
								}
							},
							"weekOfMonth": {
								"type": "string",
								"enum": [
									"FIRST",
									"FOURTH",
									"LAST",
									"SECOND",
									"THIRD"
								]
							},
							"executionTimes": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"endDate": {
								"type": "string",
								"format": "date-time"
							},
							"monthlyType": {
								"type": "string",
								"enum": [
									"EXACT",
									"SEQUENCE_MONTHLY",
									"SEQUENCE_WEEKLY"
								]
							}
						}
					}
				]
			},
			"ExternalOnceSchedule": {
				"required": [
					"tag"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSchedule"
					},
					{
						"type": "object",
						"properties": {
							"executionTimes": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				]
			},
			"ExternalOverwritePostTransmissionActions": {
				"type": "object",
				"properties": {
					"doAsOut": {
						"type": "string"
					},
					"deleteOnTempFailOut": {
						"type": "boolean"
					},
					"moveOnTempFailOut": {
						"type": "string"
					},
					"deleteOnPermFailOut": {
						"type": "boolean"
					},
					"moveOnPermFailOut": {
						"type": "string"
					},
					"moveOnSuccessOut": {
						"type": "string"
					},
					"doMoveOverwriteOut": {
						"type": "boolean"
					},
					"doAsIn": {
						"type": "string"
					},
					"deleteOnPermFailIn": {
						"type": "boolean"
					},
					"moveOnPermFailIn": {
						"type": "string"
					},
					"deleteOnSuccessIn": {
						"type": "boolean"
					},
					"moveOnSuccessIn": {
						"type": "string"
					},
					"doMoveOverwriteIn": {
						"type": "boolean"
					}
				}
			},
			"ExternalPasswordCredentials": {
				"type": "object",
				"properties": {
					"password": {
						"maxLength": 2147483647,
						"minLength": 1,
						"type": "string"
					},
					"passwordDigest": {
						"maxLength": 2147483647,
						"minLength": 1,
						"type": "string"
					},
					"forcePasswordChange": {
						"type": "boolean"
					},
					"lastPasswordChange": {
						"type": "string"
					},
					"lastOwnPasswordChange": {
						"type": "string"
					},
					"passwordExpiryInterval": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"ExternalPesitSite": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"host": {
								"type": "string"
							},
							"port": {
								"type": "string"
							},
							"preconnectionPartnerId": {
								"type": "string"
							},
							"preconnectionPartnerPassword": {
								"type": "string"
							},
							"preconnectionServerId": {
								"type": "string"
							},
							"preconnectionServerPassword": {
								"type": "string"
							},
							"configurePreconnection": {
								"type": "boolean"
							},
							"useServerPassword": {
								"type": "boolean"
							},
							"useServerPasswordExpr": {
								"type": "boolean"
							},
							"serverPassword": {
								"type": "string"
							},
							"usePartnerPassword": {
								"type": "boolean"
							},
							"usePartnerPasswordExpr": {
								"type": "boolean"
							},
							"partnerPassword": {
								"type": "string"
							},
							"checkpointInterval": {
								"type": "integer",
								"format": "int32"
							},
							"checkpointWindow": {
								"type": "integer",
								"format": "int32"
							},
							"connectionTimeout": {
								"type": "integer",
								"format": "int32"
							},
							"resyncAllowed": {
								"type": "boolean"
							},
							"compression": {
								"pattern": "^((?i)(none)|(vertical)|(horizontal)|(both)|)$",
								"type": "string"
							},
							"fipsMode": {
								"type": "boolean"
							},
							"verifyCert": {
								"type": "boolean"
							},
							"isSecure": {
								"type": "boolean"
							},
							"cftCompatibleSslMode": {
								"type": "boolean"
							},
							"loginCertificate": {
								"type": "string"
							},
							"partnerCertificate": {
								"type": "string"
							},
							"bufferSize": {
								"type": "integer",
								"format": "int32"
							},
							"receiveMessage": {
								"type": "string"
							},
							"sendMessage": {
								"type": "string"
							},
							"originator": {
								"type": "string"
							},
							"finalDestination": {
								"type": "string"
							},
							"storeAndForwardMode": {
								"type": "string"
							},
							"dmz": {
								"type": "string"
							},
							"ptcpConnections": {
								"type": "integer",
								"format": "int32"
							},
							"ptcpPacketSize": {
								"type": "integer",
								"format": "int32"
							},
							"socketSendReceiveBuffersize": {
								"type": "integer",
								"format": "int32"
							},
							"ptcpConnectRetryCount": {
								"type": "integer",
								"format": "int32"
							},
							"cipherSuites": {
								"type": "string"
							},
							"protocols": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalPgpDecryptionRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"requireEncryption": {
								"type": "boolean"
							},
							"requireTrustedSignature": {
								"type": "boolean"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							}
						}
					}
				]
			},
			"ExternalPgpEncryptionRouteStep": {
				"required": [
					"autostart",
					"compressionType",
					"fileFilterExpression",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"compressionLevel": {
								"type": "string"
							},
							"compressionType": {
								"type": "string"
							},
							"encryptKeyExpression": {
								"type": "string"
							},
							"encryptKeyExpressionType": {
								"type": "string",
								"enum": [
									"ALIAS",
									"EXPRESSION_WILDCARD"
								]
							},
							"encryptKeyOwnerExpression": {
								"type": "string"
							},
							"encryptKeyOwnerExpressionType": {
								"type": "string",
								"enum": [
									"NAME",
									"EXPRESSION"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"postTransformationActionRenameAsExpression": {
								"type": "string"
							},
							"signKeyExpression": {
								"type": "string"
							},
							"signKeyExpressionType": {
								"type": "string",
								"enum": [
									"ALIAS",
									"EXPRESSION_WILDCARD"
								]
							},
							"signKeyOwnerExpression": {
								"type": "string"
							},
							"signKeyOwnerExpressionType": {
								"type": "string",
								"enum": [
									"NAME",
									"EXPRESSION"
								]
							},
							"useAsciiArmour": {
								"type": "boolean"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalPostClientDownloads": {
				"type": "object",
				"properties": {
					"postClientDownloadActionType": {
						"type": "string"
					},
					"postClientDownloadActionTypeFailure": {
						"type": "string"
					},
					"postClientDownloadTypeOnFailDoAdvancedRouting": {
						"type": "boolean"
					},
					"postClientDownloadTypeOnFailDoAdvancedRoutingProcessFailedFile": {
						"type": "boolean"
					},
					"postClientDownloadTypeOnPermfailDoDelete": {
						"type": "boolean"
					},
					"postClientDownloadTypeOnSuccessDoAdvancedRouting": {
						"type": "boolean"
					},
					"postClientDownloadTypeOnSuccessDoAdvancedRoutingProcessFile": {
						"type": "boolean"
					}
				}
			},
			"ExternalPostProcessingActions": {
				"type": "object",
				"properties": {
					"ppaOnFailInDoDelete": {
						"type": "boolean"
					},
					"ppaOnFailInDoMove": {
						"type": "string"
					},
					"ppaOnSuccessInDoDelete": {
						"type": "boolean"
					},
					"ppaOnSuccessInDoMove": {
						"type": "string"
					}
				}
			},
			"ExternalPublishRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"filenameCollisionResolutionType",
					"status",
					"targetAccountExpression",
					"targetAccountExpressionType",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"disableAutoCreateTargetFolder": {
								"type": "boolean"
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"filenameCollisionResolutionType": {
								"type": "string"
							},
							"postRoutingActionRenameExpression": {
								"type": "string"
							},
							"postRoutingActionType": {
								"type": "string"
							},
							"publishFileAs": {
								"type": "string"
							},
							"targetAccountExpression": {
								"type": "string"
							},
							"targetAccountExpressionType": {
								"type": "string",
								"enum": [
									"NAME",
									"EXPRESSION"
								]
							},
							"targetFolderExpression": {
								"type": "string"
							},
							"targetFolderExpressionType": {
								"type": "string",
								"enum": [
									"SIMPLE",
									"EXPRESSION"
								]
							},
							"triggerSubscription": {
								"type": "boolean"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalRenameRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"outputFileName",
					"status",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"outputFileName": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalRoute": {
				"required": [
					"businessUnits",
					"conditionType",
					"failureEmailNotification",
					"name",
					"stepStatuses",
					"steps",
					"subscriptions",
					"successEmailNotification",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"name": {
						"maxLength": 255,
						"minLength": 0,
						"pattern": "^(([^\\/\\;\\']*))$",
						"type": "string"
					},
					"description": {
						"maxLength": 2048,
						"minLength": 0,
						"type": "string"
					},
					"type": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string",
						"enum": [
							"TEMPLATE",
							"SIMPLE",
							"COMPOSITE"
						]
					},
					"routeTemplate": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"account": {
						"maxLength": 80,
						"minLength": 0,
						"pattern": "^(([^\\/\\;\\']*))$",
						"type": "string"
					},
					"condition": {
						"type": "string"
					},
					"conditionType": {
						"type": "string",
						"enum": [
							"MATCH_ALL",
							"MATCH_FIRST",
							"ALWAYS",
							"EL"
						]
					},
					"failureEmailNotification": {
						"type": "boolean"
					},
					"failureEmailTemplate": {
						"type": "string"
					},
					"failureEmailName": {
						"maxLength": 2048,
						"minLength": 0,
						"type": "string"
					},
					"successEmailNotification": {
						"type": "boolean"
					},
					"successEmailTemplate": {
						"type": "string"
					},
					"successEmailName": {
						"maxLength": 2048,
						"minLength": 0,
						"type": "string"
					},
					"triggeringEmailNotification": {
						"type": "boolean"
					},
					"triggeringEmailName": {
						"maxLength": 2048,
						"minLength": 0,
						"type": "string"
					},
					"triggeringEmailTemplate": {
						"type": "string"
					},
					"steps": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalBaseRouteStep"
						}
					},
					"stepStatuses": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalRouteStepStatus"
						}
					},
					"businessUnits": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"subscriptions": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalRouteStepStatus": {
				"required": [
					"id",
					"status"
				],
				"type": "object",
				"properties": {
					"stepId": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"status": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string",
						"enum": [
							"DISABLED",
							"ENABLED"
						]
					},
					"id": {
						"type": "string"
					}
				}
			},
			"ExternalScriptRouteStep": {
				"required": [
					"autostart",
					"logOutput",
					"rootExecution",
					"status",
					"type"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"logOutput": {
								"type": "boolean"
							},
							"rootExecution": {
								"type": "boolean"
							},
							"scriptPath": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalSecretQuestion": {
				"type": "object",
				"properties": {
					"secretQuestion": {
						"type": "string"
					},
					"secretAnswerGuessFailures": {
						"type": "integer",
						"format": "int32"
					},
					"forceSecretQuestionChange": {
						"type": "boolean"
					}
				}
			},
			"ExternalSendToPartnerSiteRouteStep": {
				"required": [
					"autostart",
					"fileFilterExpression",
					"status",
					"transferSiteExpression",
					"type",
					"usePrecedingStepFiles"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseRouteStep"
					},
					{
						"type": "object",
						"properties": {
							"actionOnStepFailure": {
								"type": "string",
								"enum": [
									"PROCEED",
									"FAIL"
								]
							},
							"archivePolicyOnFailure": {
								"pattern": "ENABLED|DISABLED|DEFAULT",
								"type": "string"
							},
							"archivePolicyOnSuccess": {
								"pattern": "ENABLED|DISABLED|DEFAULT",
								"type": "string"
							},
							"dataEncoding": {
								"type": "string"
							},
							"fileFilterExpression": {
								"type": "string"
							},
							"fileFilterExpressionType": {
								"type": "string",
								"enum": [
									"GLOB",
									"REGEXP",
									"TEXT_FILES"
								]
							},
							"fileLabel": {
								"type": "string"
							},
							"finalDestination": {
								"type": "string"
							},
							"maxNumberOfRetries": {
								"type": "integer",
								"format": "int32"
							},
							"maxParallelClients": {
								"type": "integer",
								"format": "int32"
							},
							"originator": {
								"type": "string"
							},
							"postRoutingActionRenameExpression": {
								"type": "string"
							},
							"postRoutingActionType": {
								"type": "string"
							},
							"recordFormat": {
								"type": "string"
							},
							"recordLength": {
								"type": "string"
							},
							"routeFileAs": {
								"type": "string"
							},
							"sleepBetweenRetries": {
								"type": "integer",
								"format": "int32"
							},
							"sleepIncrementBetweenRetries": {
								"type": "integer",
								"format": "int32"
							},
							"storeAndForwardMode": {
								"type": "string"
							},
							"targetAccountExpression": {
								"type": "string"
							},
							"targetAccountExpressionType": {
								"type": "string",
								"enum": [
									"NAME",
									"EXPRESSION"
								]
							},
							"transferProfileExpression": {
								"type": "string"
							},
							"transferProfileExpressionType": {
								"type": "string",
								"enum": [
									"NAME",
									"EXPRESSION"
								]
							},
							"transferSiteExpression": {
								"type": "string"
							},
							"transferSiteExpressionType": {
								"type": "string",
								"enum": [
									"LIST",
									"EXPRESSION_WILDCARD"
								]
							},
							"triggerFileContent": {
								"type": "string"
							},
							"triggerFileForEach": {
								"type": "boolean"
							},
							"triggerFileName": {
								"type": "string"
							},
							"triggerTargetAccountExpression": {
								"type": "string"
							},
							"triggerTargetAccountExpressionType": {
								"type": "string",
								"enum": [
									"NAME",
									"EXPRESSION"
								]
							},
							"triggerTransferProfileExpression": {
								"type": "string"
							},
							"triggerTransferProfileExpressionType": {
								"type": "string"
							},
							"triggerTransferSiteExpression": {
								"type": "string"
							},
							"triggerTransferSiteExpressionType": {
								"type": "string"
							},
							"triggerUploadFolder": {
								"type": "string"
							},
							"uploadFolder": {
								"type": "string"
							},
							"usePrecedingStepFiles": {
								"type": "boolean"
							},
							"userMessage": {
								"type": "string"
							},
							"virtualFilename": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalServiceAccount": {
				"required": [
					"authByEmail",
					"gid",
					"name",
					"routingMode",
					"uid"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseAccount"
					},
					{
						"type": "object",
						"properties": {
							"routingMode": {
								"pattern": "^((accept)|(reject)|(ignore))$",
								"type": "string"
							},
							"user": {
								"$ref": "#/components/schemas/ExternalUser"
							}
						}
					}
				]
			},
			"ExternalSharedFolderSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"postTransmissionActions",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					},
					{
						"type": "object",
						"properties": {
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalSubscriptionPostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalSiteAlternativeAddress": {
				"required": [
					"host",
					"position"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"position": {
						"type": "integer",
						"format": "int32"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"type": "string"
					}
				}
			},
			"ExternalSiteMailboxSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"postTransmissionActions",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					},
					{
						"type": "object",
						"properties": {
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalSubscriptionPostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalSitePostTransmissionActions": {
				"type": "object",
				"properties": {
					"doAsOut": {
						"type": "string"
					},
					"deleteOnTempFailOut": {
						"type": "boolean"
					},
					"moveOnTempFailOut": {
						"type": "string"
					},
					"deleteOnPermFailOut": {
						"type": "boolean"
					},
					"moveOnPermFailOut": {
						"type": "string"
					},
					"moveOnSuccessOut": {
						"type": "string"
					},
					"doAsIn": {
						"type": "string"
					},
					"deleteOnPermFailIn": {
						"type": "boolean"
					},
					"moveOnPermFailIn": {
						"type": "string"
					},
					"deleteOnSuccessIn": {
						"type": "boolean"
					},
					"moveOnSuccessIn": {
						"type": "string"
					}
				}
			},
			"ExternalSshSite": {
				"required": [
					"account",
					"name",
					"protocol"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"fingerPrint": {
								"type": "string"
							},
							"verifyFinger": {
								"type": "boolean"
							},
							"host": {
								"type": "string"
							},
							"port": {
								"type": "string"
							},
							"downloadFolderAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"downloadFolder": {
								"type": "string"
							},
							"downloadPatternAdvancedExpressionEnabled": {
								"type": "boolean"
							},
							"downloadPattern": {
								"type": "string"
							},
							"uploadFolder": {
								"type": "string"
							},
							"uploadFolderOverridable": {
								"type": "boolean"
							},
							"userName": {
								"type": "string"
							},
							"usePassword": {
								"type": "boolean"
							},
							"usePasswordExpr": {
								"type": "boolean"
							},
							"password": {
								"type": "string"
							},
							"clientCertificate": {
								"type": "string"
							},
							"transferMode": {
								"pattern": "^((?i)(BINARY)|(ASCII)|(AUTO_DETECT))$",
								"type": "string"
							},
							"fipsMode": {
								"type": "boolean"
							},
							"dmz": {
								"type": "string"
							},
							"socketTimeout": {
								"type": "integer",
								"format": "int32"
							},
							"socketBufferSize": {
								"type": "integer",
								"format": "int32"
							},
							"socketSendBufferSize": {
								"type": "integer",
								"format": "int32"
							},
							"downloadPatternType": {
								"type": "string"
							},
							"uploadPermissions": {
								"type": "string"
							},
							"bufferSize": {
								"type": "integer",
								"format": "int32"
							},
							"blockSize": {
								"type": "integer",
								"format": "int32"
							},
							"tcpNoDelay": {
								"type": "boolean"
							},
							"cipherSuites": {
								"type": "string"
							},
							"protocols": {
								"type": "string"
							},
							"allowedMacs": {
								"type": "string"
							},
							"keyExchangeAlgorithms": {
								"type": "string"
							},
							"publicKeys": {
								"type": "string"
							},
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalOverwritePostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalStandardRouterSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"postTransmissionActions",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					},
					{
						"type": "object",
						"properties": {
							"subscriberID": {
								"type": "string"
							},
							"postTransmissionActions": {
								"$ref": "#/components/schemas/ExternalSubscriptionPostTransmissionActions"
							}
						}
					}
				]
			},
			"ExternalSubscriptionPostTransmissionActions": {
				"type": "object",
				"properties": {
					"moveOverwrite": {
						"type": "boolean"
					},
					"ptaOnPermfailDoAdvancedRouting": {
						"type": "boolean"
					},
					"ptaOnPermfailInDoAdvancedRoutingFailedFile": {
						"type": "boolean"
					},
					"ptaOnPermfailInDoAdvancedRoutingWildcardPull": {
						"type": "boolean"
					},
					"ptaOnPermfailInDoDelete": {
						"type": "boolean"
					},
					"ptaOnPermfailInDoMove": {
						"type": "string"
					},
					"ptaOnPermfailOutDoDelete": {
						"type": "boolean"
					},
					"ptaOnPermfailOutDoMove": {
						"type": "string"
					},
					"ptaOnSuccessDoInAdvancedRoutingWildcardPull": {
						"type": "boolean"
					},
					"ptaOnSuccessInDoDelete": {
						"type": "boolean"
					},
					"ptaOnSuccessInDoMove": {
						"type": "string"
					},
					"ptaOnSuccessInDoMoveOverwrite": {
						"type": "boolean"
					},
					"ptaOnSuccessOutDoDelete": {
						"type": "boolean"
					},
					"ptaOnSuccessOutDoMove": {
						"type": "string"
					},
					"ptaOnSuccessOutDoMoveOverwrite": {
						"type": "boolean"
					},
					"ptaOnTempfailInDoAdvancedRouting": {
						"type": "boolean"
					},
					"ptaOnTempfailInDoAdvancedRoutingProcessFailedFile": {
						"type": "boolean"
					},
					"ptaOnTempfailInDoAdvancedRoutingWildcardPull": {
						"type": "boolean"
					},
					"ptaOnTempfailInDoDelete": {
						"type": "boolean"
					},
					"ptaOnTempfailInDoMove": {
						"type": "string"
					},
					"ptaOnTempfailOutDoDelete": {
						"type": "boolean"
					},
					"ptaOnTempfailOutDoMove": {
						"type": "string"
					},
					"submitFilenamePatternExpression": {
						"type": "string"
					},
					"submitFilterType": {
						"type": "string"
					},
					"triggerOnConditionEnabled": {
						"type": "boolean"
					},
					"triggerOnConditionExpression": {
						"type": "string"
					},
					"triggerOnSuccessfulWildcardPull": {
						"type": "boolean"
					}
				}
			},
			"ExternalSynchronySite": {
				"required": [
					"account",
					"host",
					"name",
					"partner",
					"password",
					"port",
					"protocol",
					"transferProfile",
					"username"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSite"
					},
					{
						"type": "object",
						"properties": {
							"host": {
								"type": "string"
							},
							"port": {
								"type": "string"
							},
							"username": {
								"type": "string"
							},
							"usePasswordExpr": {
								"type": "boolean"
							},
							"partner": {
								"type": "string"
							},
							"transferProfile": {
								"type": "string"
							},
							"password": {
								"type": "string"
							},
							"additionalProperties": {
								"$ref": "#/components/schemas/AdditionalProperties"
							}
						}
					}
				]
			},
			"ExternalSynchronyTransferSubscription": {
				"required": [
					"account",
					"application",
					"folder",
					"schedules",
					"subscriptionEncryptMode",
					"transferConfigurations"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSubscription"
					}
				]
			},
			"ExternalTransferConfiguration": {
				"required": [
					"dataTransformations",
					"tag"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"site": {
						"type": "string"
					},
					"tag": {
						"type": "string"
					},
					"outbound": {
						"type": "boolean"
					},
					"dataTransformations": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalDataTransformation"
						}
					},
					"transferProfile": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalTransferProfile": {
				"required": [
					"account",
					"name"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"maxLength": 2147483647,
						"minLength": 1,
						"type": "string"
					},
					"default": {
						"type": "boolean"
					},
					"account": {
						"type": "string"
					},
					"sendMapping": {
						"maxLength": 250,
						"minLength": 0,
						"type": "string"
					},
					"receiveMapping": {
						"maxLength": 250,
						"minLength": 0,
						"pattern": "^(([^\\*\\?]*))$",
						"type": "string"
					},
					"sendingAcknowledgmentEnabled": {
						"type": "boolean"
					},
					"fileLabelOption": {
						"type": "string",
						"enum": [
							"DONT_SEND",
							"SEND_FILENAME",
							"SEND_FILENAME_AND_PATH"
						]
					},
					"multiSelect": {
						"type": "boolean"
					},
					"transferMode": {
						"type": "string",
						"enum": [
							"BINARY",
							"ASCII",
							"EBCDIC",
							"EBCDIC_NATIVE"
						]
					},
					"recordFormat": {
						"type": "string"
					},
					"recordLength": {
						"maximum": 2147483647,
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"paddingStripEnabled": {
						"type": "boolean"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalUser": {
				"required": [
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"maxLength": 80,
						"minLength": 0,
						"pattern": "^(([^\\+\\:\\[]*))$",
						"type": "string"
					},
					"authExternal": {
						"type": "boolean"
					},
					"locked": {
						"type": "boolean"
					},
					"failedAuthAttempts": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					},
					"failedAuthMaximum": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					},
					"lastFailedAuth": {
						"type": "string"
					},
					"lastLogin": {
						"type": "string"
					},
					"successfulAuthMaximum": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"successfulLogins": {
						"type": "integer",
						"format": "int32"
					},
					"secretQuestion": {
						"$ref": "#/components/schemas/ExternalSecretQuestion"
					},
					"passwordCredentials": {
						"$ref": "#/components/schemas/ExternalPasswordCredentials"
					}
				}
			},
			"ExternalWeeklySchedule": {
				"required": [
					"tag"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSchedule"
					},
					{
						"type": "object",
						"properties": {
							"executionTimes": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"endDate": {
								"type": "string",
								"format": "date-time"
							},
							"daysOfWeek": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string",
									"enum": [
										"SUNDAY",
										"MONDAY",
										"TUESDAY",
										"WEDNESDAY",
										"THURSDAY",
										"FRIDAY",
										"SATURDAY"
									]
								}
							}
						}
					}
				]
			},
			"ExternalYearlySchedule": {
				"required": [
					"tag"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSchedule"
					},
					{
						"type": "object",
						"properties": {
							"daysOfMonth": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "integer",
									"format": "int32"
								}
							},
							"executionTimes": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"endDate": {
								"type": "string",
								"format": "date-time"
							},
							"months": {
								"uniqueItems": true,
								"type": "array",
								"items": {
									"type": "string",
									"enum": [
										"JANUARY",
										"FEBRUARY",
										"MARCH",
										"APRIL",
										"MAY",
										"JUNE",
										"JULY",
										"AUGUST",
										"SEPTEMBER",
										"OCTOBER",
										"NOVEMBER",
										"DECEMBER"
									]
								}
							}
						}
					}
				]
			},
			"FileMaintenanceSettings": {
				"type": "object",
				"properties": {
					"allowPolicyModifying": {
						"type": "boolean"
					},
					"policy": {
						"pattern": "^((default)|(custom)|(disabled))$",
						"type": "string"
					},
					"deleteFilesDays": {
						"type": "integer",
						"format": "int32"
					},
					"pattern": {
						"type": "string"
					},
					"expirationPeriod": {
						"type": "boolean"
					},
					"removeFolders": {
						"type": "boolean"
					},
					"warningNotifications": {
						"type": "boolean"
					},
					"warnNotifyAccount": {
						"type": "boolean"
					},
					"warnNotifyEmails": {
						"type": "string"
					},
					"warningNotificationsTemplate": {
						"type": "string"
					},
					"notifyDays": {
						"type": "string"
					},
					"sendSentinelAlert": {
						"type": "boolean"
					},
					"deletionNotifications": {
						"type": "boolean"
					},
					"deletionNotifyAccount": {
						"type": "boolean"
					},
					"deletionNotifyEmails": {
						"type": "string"
					},
					"deletionNotificationsTemplate": {
						"type": "string"
					}
				}
			},
			"LinkDescription": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"method": {
						"type": "string"
					},
					"parameters": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"apiVersion": {
						"type": "string"
					},
					"queryParameters": {
						"type": "object",
						"additionalProperties": {
							"type": "array",
							"items": {
								"type": "object"
							}
						}
					}
				}
			},
			"PackageRoutingRule": {
				"required": [
					"enabled"
				],
				"type": "object",
				"properties": {
					"enabled": {
						"type": "boolean"
					},
					"recipientPattern": {
						"type": "string"
					},
					"fileFilterPattern": {
						"type": "string"
					},
					"targetFolder": {
						"type": "string"
					}
				}
			},
			"ExternalAddressBookGlobalSource": {
				"required": [
					"enabled",
					"id",
					"name",
					"parentGroup",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"name": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"Local",
							"LDAP",
							"Custom"
						]
					},
					"parentGroup": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"customProperties": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}
			},
			"ExternalAdministrativeRole": {
				"required": [
					"isBounceAllowed",
					"isLimited",
					"roleName"
				],
				"type": "object",
				"properties": {
					"roleName": {
						"maxLength": 80,
						"minLength": 0,
						"type": "string"
					},
					"isLimited": {
						"type": "boolean"
					},
					"isBounceAllowed": {
						"type": "boolean"
					},
					"menus": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalAdministrator": {
				"required": [
					"businessUnits",
					"dualAuthentication",
					"localAuthentication",
					"locked",
					"roleName"
				],
				"type": "object",
				"properties": {
					"loginName": {
						"maxLength": 80,
						"minLength": 0,
						"type": "string"
					},
					"roleName": {
						"type": "string"
					},
					"isLimited": {
						"type": "boolean"
					},
					"localAuthentication": {
						"type": "boolean"
					},
					"dualAuthentication": {
						"type": "boolean"
					},
					"certificateDN": {
						"type": "string"
					},
					"locked": {
						"type": "boolean"
					},
					"businessUnits": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"parent": {
						"type": "string"
					},
					"fullCreationPath": {
						"type": "string"
					},
					"administratorRights": {
						"$ref": "#/components/schemas/ExternalAdministratorRights"
					},
					"passwordCredentials": {
						"$ref": "#/components/schemas/ExternalAdministratorPasswordCredentials"
					}
				}
			},
			"ExternalAdministratorPasswordCredentials": {
				"required": [
					"passwordExpired"
				],
				"type": "object",
				"properties": {
					"password": {
						"type": "string"
					},
					"loginFailureCount": {
						"type": "integer",
						"format": "int32"
					},
					"lastPasswordChangeTime": {
						"type": "string"
					},
					"lastOwnPasswordChange": {
						"type": "string",
						"writeOnly": true
					},
					"lastLoginTime": {
						"type": "string"
					},
					"lastFailureLoginTime": {
						"type": "string"
					},
					"passwordExpired": {
						"type": "boolean"
					}
				}
			},
			"ExternalAdministratorRights": {
				"required": [
					"canAccessHelpDesk",
					"canCreateUsers",
					"canManageAdministrators",
					"canManageApplications",
					"canManageBusinessUnits",
					"canManageExternalScriptRootExecution",
					"canManageExternalScriptStep",
					"canManageIcapSettings",
					"canManageLoginRestrictionPolicies",
					"canManageRouteTemplates",
					"canManageSharedFolders",
					"canReadOnly",
					"canSeeFullAuditLog",
					"canUpdateUsers",
					"isChecker",
					"isMaker"
				],
				"type": "object",
				"properties": {
					"canReadOnly": {
						"type": "boolean"
					},
					"isMaker": {
						"type": "boolean"
					},
					"isChecker": {
						"type": "boolean"
					},
					"canCreateUsers": {
						"type": "boolean"
					},
					"canUpdateUsers": {
						"type": "boolean"
					},
					"canAccessHelpDesk": {
						"type": "boolean"
					},
					"canSeeFullAuditLog": {
						"type": "boolean"
					},
					"canManageAdministrators": {
						"type": "boolean"
					},
					"canManageApplications": {
						"type": "boolean"
					},
					"canManageSharedFolders": {
						"type": "boolean"
					},
					"canManageBusinessUnits": {
						"type": "boolean"
					},
					"canManageRouteTemplates": {
						"type": "boolean"
					},
					"canManageExternalScriptStep": {
						"type": "boolean"
					},
					"canManageExternalScriptRootExecution": {
						"type": "boolean"
					},
					"canManageLoginRestrictionPolicies": {
						"type": "boolean"
					},
					"canManageIcapSettings": {
						"type": "boolean"
					}
				}
			},
			"ExternalSTServers": {
				"type": "array",
				"properties": {
					"empty": {
						"type": "boolean"
					}
				},
				"items": {
					"type": "string"
				}
			},
			"ExternalAccountRetentionApplication": {
				"required": [
					"accountCreationDaysCriteria",
					"accountInactivityDaysCriteria",
					"businessUnits",
					"certificateNotificationDays",
					"deleteDisabledAccountAfterXDaysCriteria",
					"firstMaintenanceRun",
					"name",
					"schedules"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"accountAction": {
								"type": "string"
							},
							"accountCreationDaysCriteria": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"accountInactivityDaysCriteria": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"actionNotificationEmails": {
								"type": "string"
							},
							"certificateNotificationDays": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"certificateNotificationEmailTemplate": {
								"type": "string"
							},
							"deleteDisabledAccountAfterXDaysCriteria": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"enableAccountNotifications": {
								"type": "boolean"
							},
							"enableCertificateExpirationNotifications": {
								"type": "boolean"
							},
							"enablePasswordExpirationNotifications": {
								"type": "boolean"
							},
							"firstMaintenanceRun": {
								"minimum": 0,
								"type": "integer",
								"format": "int64"
							},
							"notificationCertificateEmails": {
								"type": "string"
							},
							"notificationDays": {
								"type": "string"
							},
							"passwordExpirationNotificationEmails": {
								"type": "string"
							},
							"passwordNotificationDays": {
								"type": "string"
							},
							"passwordNotificationEmailTemplate": {
								"type": "string"
							},
							"reportNotificationEmailTemplate": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalAdvancedRoutingApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					}
				]
			},
			"ExternalArchiveMaintApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					}
				]
			},
			"ExternalAuditLogMaintApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"dayMode": {
								"maximum": 1,
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"exportDir": {
								"type": "string"
							},
							"exportEnabled": {
								"type": "boolean"
							},
							"timeKeepingDataInDb": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							}
						}
					}
				]
			},
			"ExternalBaseApplication": {
				"required": [
					"businessUnits",
					"name",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"pattern": "^([^\\/\\\\;\\']*)$",
						"type": "string"
					},
					"notes": {
						"type": "string"
					},
					"businessUnits": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"schedules": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalBaseSchedule"
						}
					},
					"type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalBasicApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					}
				]
			},
			"ExternalFileRetentionApplication": {
				"required": [
					"businessUnits",
					"name",
					"schedules"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"deleteFilesDays": {
								"type": "integer",
								"format": "int32"
							},
							"pattern": {
								"type": "string"
							},
							"expirationPeriod": {
								"type": "boolean"
							},
							"removeFolders": {
								"type": "boolean"
							},
							"warningNotifications": {
								"type": "boolean"
							},
							"sendSentinelAlert": {
								"type": "boolean"
							},
							"warningNotificationsTemplate": {
								"type": "string"
							},
							"notifyDays": {
								"type": "string"
							},
							"warnNotifyAccount": {
								"type": "boolean"
							},
							"warnNotifyEmails": {
								"type": "string"
							},
							"deletionNotifyAccount": {
								"type": "boolean"
							},
							"deletionNotificationsTemplate": {
								"type": "string"
							},
							"deletionNotifyEmails": {
								"type": "string"
							},
							"deletionNotifications": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalHumanSystemApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					}
				]
			},
			"ExternalLogEntryMaintApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"dayMode": {
								"maximum": 2,
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"daysKeepingDataInFiles": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"exportDir": {
								"type": "string"
							},
							"pgdumpPath": {
								"type": "string"
							},
							"exportEnabled": {
								"type": "boolean"
							},
							"parallelismDegree": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"recordsPerFile": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"timeKeepingDataInDb": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							}
						}
					}
				]
			},
			"ExternalLoginThresholdMaintenanceApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"emails": {
								"type": "string"
							},
							"isReport": {
								"type": "boolean"
							},
							"isUnlock": {
								"type": "boolean"
							},
							"reportEmailTemplate": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalMBFTApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					}
				]
			},
			"ExternalPackageRetentionMaintApplication": {
				"required": [
					"businessUnits",
					"maxRunningMinutes",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"maxRunningMinutes": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							}
						}
					}
				]
			},
			"ExternalSentinelLinkDataMaintApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					}
				]
			},
			"ExternalSharedFolderApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"sharedFolder": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalSiteMailboxApplication": {
				"required": [
					"businessUnits",
					"inboxFolder",
					"name",
					"outboxFolder"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"dropFolder": {
								"type": "string"
							},
							"inboxFolder": {
								"type": "string"
							},
							"outboxFolder": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalStandardRouterApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"dropFolder": {
								"type": "string"
							},
							"inboxEnabled": {
								"type": "boolean"
							},
							"inboxFolder": {
								"type": "string"
							},
							"inboxIdPattern": {
								"type": "string"
							},
							"outboxEnabled": {
								"type": "boolean"
							},
							"outboxFileFormat": {
								"type": "string"
							},
							"outboxFolder": {
								"type": "string"
							},
							"renameFilesEnabled": {
								"type": "boolean"
							},
							"secureConnectionRequired": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalSynchronyTransferApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					}
				]
			},
			"ExternalTransferLogMaintApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"daysKeepingDataInDb": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"daysKeepingDataInFiles": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"daysKeepingInProgressInDb": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"exportEnabled": {
								"type": "boolean"
							},
							"exportDir": {
								"type": "string"
							},
							"pgdumpPath": {
								"type": "string"
							},
							"parallelismDegree": {
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"recordsPerFile": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							}
						}
					}
				]
			},
			"ExternalUnlicensedAccountMaintApplication": {
				"required": [
					"businessUnits",
					"name"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseApplication"
					},
					{
						"type": "object",
						"properties": {
							"inactivePeriod": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							}
						}
					}
				]
			},
			"ExternalAuditLogEntry": {
				"required": [
					"configurationId",
					"dateModified",
					"id",
					"operationType"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"dateModified": {
						"type": "string"
					},
					"configurationId": {
						"type": "string"
					},
					"operationType": {
						"type": "string",
						"enum": [
							"CREATE",
							"UPDATE",
							"DELETE",
							"CREATE_OR_UPDATE"
						]
					},
					"objectType": {
						"type": "string"
					},
					"objectIdentifier": {
						"type": "string"
					},
					"objectName": {
						"type": "string"
					},
					"objectString": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"remoteAddress": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"AdHocSettings": {
				"required": [
					"authByEmail"
				],
				"type": "object",
				"properties": {
					"authByEmail": {
						"type": "boolean"
					},
					"authByEmailModifyingAllowed": {
						"type": "boolean"
					},
					"deliveryMethodModifyingAllowed": {
						"type": "boolean"
					},
					"deliveryMethod": {
						"type": "string",
						"enum": [
							"DISABLED",
							"DEFAULT",
							"ANONYMOUS",
							"ACCOUNT_WITHOUT_ENROLLMENT",
							"ACCOUNT_WITH_ENROLLMENT",
							"CUSTOM"
						]
					},
					"enrollmentTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"implicitEnrollmentType": {
						"type": "string",
						"enum": [
							"ANONYMOUS_LINK",
							"CHALLENGED_LINK",
							"EXISTING_ACCOUNT",
							"ENROLL_UNLICENSED",
							"ENROLL_LICENSED",
							"ENROLL_MOBILE"
						]
					},
					"enrollmentTemplate": {
						"type": "string"
					},
					"notificationTemplate": {
						"type": "string"
					}
				}
			},
			"ExternalBusinessUnit": {
				"required": [
					"accountMaintenanceSettings",
					"adHocSettings",
					"addressBookSettings",
					"bandwidthLimits",
					"baseFolder",
					"fileArchivingSettings",
					"fileMaintenanceSettings",
					"loginRestrictionSettings",
					"name",
					"transfersApiSettings"
				],
				"type": "object",
				"properties": {
					"name": {
						"maxLength": 2147483647,
						"minLength": 1,
						"type": "string"
					},
					"businessUnitHierarchy": {
						"type": "string"
					},
					"baseFolder": {
						"maxLength": 2147483647,
						"minLength": 1,
						"type": "string"
					},
					"baseFolderModifyingAllowed": {
						"type": "boolean"
					},
					"homeFolderModifyingAllowed": {
						"type": "boolean"
					},
					"parent": {
						"type": "string"
					},
					"dmz": {
						"type": "string"
					},
					"sharedFoldersCollaborationAllowed": {
						"type": "boolean"
					},
					"htmlTemplateSettings": {
						"$ref": "#/components/schemas/HtmlTemplateSettings"
					},
					"transfersApiSettings": {
						"$ref": "#/components/schemas/TransfersApiSettings"
					},
					"adHocSettings": {
						"$ref": "#/components/schemas/AdHocSettings"
					},
					"enabledIcapServers": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"fileArchivingSettings": {
						"$ref": "#/components/schemas/FileArchivingSettings"
					},
					"accountMaintenanceSettings": {
						"$ref": "#/components/schemas/AccountMaintenanceSettings"
					},
					"fileMaintenanceSettings": {
						"$ref": "#/components/schemas/FileMaintenanceSettings"
					},
					"addressBookSettings": {
						"$ref": "#/components/schemas/AddressBookSettings"
					},
					"loginRestrictionSettings": {
						"$ref": "#/components/schemas/LoginRestrictionSettings"
					},
					"bandwidthLimits": {
						"$ref": "#/components/schemas/BandwidthLimits"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"FileArchivingSettings": {
				"required": [
					"customFileSize",
					"customFileSizePolicy",
					"encryptionCertificatePolicy",
					"folderPolicy",
					"policy"
				],
				"type": "object",
				"properties": {
					"policy": {
						"pattern": "^((default)|(enabled)|(disabled))$",
						"type": "string"
					},
					"policyModifyingAllowed": {
						"type": "boolean"
					},
					"folderPolicy": {
						"pattern": "^((default)|(custom))$",
						"type": "string"
					},
					"customFolder": {
						"type": "string"
					},
					"encryptionCertificatePolicy": {
						"pattern": "^((default)|(custom)|(disabled))$",
						"type": "string"
					},
					"customEncryptionCertificate": {
						"type": "string"
					},
					"customFileSizePolicy": {
						"pattern": "^((default)|(custom))$",
						"type": "string"
					},
					"customFileSize": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"HtmlTemplateSettings": {
				"type": "object",
				"properties": {
					"htmlTemplateFolderPath": {
						"pattern": "^((Default HTML Template)|(Axway Jelly Ball 9)|(Axway Box and Stripe in Blue)|(ST Web Client)|(SecureTransport Legacy Client))$",
						"type": "string"
					},
					"allowedForModifying": {
						"type": "boolean",
						"writeOnly": true
					},
					"isAllowedForModifying": {
						"type": "boolean"
					}
				}
			},
			"LoginRestrictionSettings": {
				"required": [
					"isPolicyModifyingAllowed"
				],
				"type": "object",
				"properties": {
					"policy": {
						"type": "string"
					},
					"policyModifyingAllowed": {
						"type": "boolean",
						"writeOnly": true
					},
					"isPolicyModifyingAllowed": {
						"type": "boolean"
					}
				}
			},
			"TransfersApiSettings": {
				"required": [
					"isWebServiceRightsModifyingAllowed"
				],
				"type": "object",
				"properties": {
					"webServiceRightsModifyingAllowed": {
						"type": "boolean",
						"writeOnly": true
					},
					"transfersWebServiceAllowed": {
						"type": "boolean"
					},
					"isWebServiceRightsModifyingAllowed": {
						"type": "boolean"
					}
				}
			},
			"ExternalCertificateRequest": {
				"required": [
					"keySize",
					"subject",
					"usage"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"subject": {
						"type": "string"
					},
					"usage": {
						"pattern": "^((local)|(private))$",
						"type": "string"
					},
					"fingerprint": {
						"type": "string"
					},
					"keySize": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"account": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					},
					"signAlgorithm": {
						"pattern": "^((SHA1withRSA)|(SHA256withRSA)|(SHA384withRSA)|(SHA512withRSA))$",
						"type": "string"
					}
				}
			},
			"ExternalCertificate": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"subject": {
						"type": "string"
					},
					"type": {
						"pattern": "^((x509)|(pgp)|(ssh))$",
						"type": "string"
					},
					"usage": {
						"type": "string"
					},
					"expirationTime": {
						"type": "string"
					},
					"creationTime": {
						"type": "integer",
						"format": "int64"
					},
					"fingerprint": {
						"type": "string"
					},
					"keyAlgorithm": {
						"type": "string"
					},
					"issuer": {
						"type": "string"
					},
					"serialNumber": {
						"type": "string"
					},
					"keySize": {
						"type": "integer",
						"format": "int32"
					},
					"version": {
						"type": "integer",
						"format": "int32"
					},
					"validityPeriod": {
						"type": "integer",
						"format": "int32"
					},
					"account": {
						"type": "string"
					},
					"accessLevel": {
						"type": "string",
						"enum": [
							"PRIVATE",
							"BUSINESS_UNIT",
							"PUBLIC"
						]
					},
					"caPassword": {
						"type": "string"
					},
					"validationStatus": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"overwrite": {
						"type": "boolean"
					},
					"exportPrivateKey": {
						"type": "boolean"
					},
					"exportSSHPublicKey": {
						"type": "boolean"
					},
					"signAlgorithm": {
						"pattern": "^(?i)((SHA1withRSA)|(SHA256withRSA)|(SHA384withRSA)|(SHA512withRSA))$",
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"FormDataContentDisposition": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string"
					},
					"parameters": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"fileName": {
						"type": "string"
					},
					"creationDate": {
						"type": "string",
						"format": "date-time"
					},
					"modificationDate": {
						"type": "string",
						"format": "date-time"
					},
					"readDate": {
						"type": "string",
						"format": "date-time"
					},
					"size": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					}
				}
			},
			"ExternalEdge": {
				"required": [
					"title"
				],
				"type": "object",
				"properties": {
					"title": {
						"maxLength": 255,
						"minLength": 0,
						"pattern": "^([^\\/\\\\;\\']*)$",
						"type": "string"
					},
					"notes": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"deploymentSite": {
						"type": "string"
					},
					"enabledProxy": {
						"type": "boolean"
					},
					"configurationId": {
						"type": "string"
					},
					"descriptor": {
						"type": "string"
					},
					"ipAddresses": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalEdgeIpAddress"
						}
					}
				}
			},
			"ExternalEdgeIpAddress": {
				"required": [
					"ipAddress"
				],
				"type": "object",
				"properties": {
					"ipAddress": {
						"type": "string"
					}
				}
			},
			"ExternalEdgeProtocol": {
				"required": [
					"isEnabled",
					"streamingProtocol"
				],
				"type": "object",
				"properties": {
					"streamingProtocol": {
						"type": "string",
						"enum": [
							"HTTP",
							"FTP",
							"AS2",
							"SSH",
							"PESIT",
							"ADMIN"
						]
					},
					"port": {
						"maximum": 65535,
						"minimum": 1024,
						"type": "integer",
						"format": "int32"
					},
					"isEnabled": {
						"type": "boolean"
					},
					"sslAlias": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalEdgeProxy": {
				"required": [
					"proxyProtocol"
				],
				"type": "object",
				"properties": {
					"proxyProtocol": {
						"type": "string"
					},
					"port": {
						"type": "integer",
						"format": "int32"
					},
					"isEnabled": {
						"type": "boolean"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"isUsePassword": {
						"type": "boolean"
					}
				}
			},
			"ExternalZone": {
				"required": [
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"maxLength": 255,
						"minLength": 1,
						"pattern": "^([^\\/\\\\;\\']*)$",
						"type": "string"
					},
					"description": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"publicURLPrefix": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"ssoSpEntityId": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"isDnsResolutionEnabled": {
						"type": "boolean"
					},
					"isDefault": {
						"type": "boolean"
					}
				}
			},
			"ExternalNodeThreshold": {
				"required": [
					"numberOfNodes"
				],
				"type": "object",
				"properties": {
					"numberOfNodes": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"sendNotification": {
						"type": "boolean"
					},
					"subject": {
						"type": "string"
					},
					"notification": {
						"type": "string"
					}
				}
			},
			"ExternalServerAddress": {
				"type": "object",
				"properties": {
					"serverAddress": {
						"type": "string"
					}
				}
			},
			"ExternalFileArchivingConfiguration": {
				"required": [
					"deleteFilesOlderThan"
				],
				"type": "object",
				"properties": {
					"isEnabled": {
						"type": "boolean"
					},
					"globalArchivingPolicy": {
						"pattern": "enabled|disabled",
						"type": "string"
					},
					"archiveFolder": {
						"type": "string"
					},
					"encryptionCertificate": {
						"type": "string"
					},
					"deleteFilesOlderThan": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"deleteFilesOlderThanUnit": {
						"pattern": "days|hours",
						"type": "string"
					},
					"maximumFileSizeAllowedToArchive": {
						"minimum": 0,
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"AdvancedConnectionSettings": {
				"required": [
					"connectionTimeout",
					"readTimeout"
				],
				"type": "object",
				"properties": {
					"connectionTimeout": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					},
					"readTimeout": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					},
					"enabledProtocols": {
						"type": "string"
					},
					"enabledCiphers": {
						"type": "string"
					}
				}
			},
			"AdvancedIcapSettings": {
				"required": [
					"enableWinNtFormat",
					"stopTransfersModifyOrNotHandled",
					"treatModifyAsBlock"
				],
				"type": "object",
				"properties": {
					"enableWinNtFormat": {
						"type": "boolean"
					},
					"stopTransfersModifyOrNotHandled": {
						"type": "boolean"
					},
					"treatModifyAsBlock": {
						"type": "boolean"
					}
				}
			},
			"BasicSettings": {
				"required": [
					"maxSize",
					"name",
					"previewSize",
					"url"
				],
				"type": "object",
				"properties": {
					"name": {
						"maxLength": 80,
						"minLength": 0,
						"pattern": "^(([^\\/\\;\\']*))$",
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"INCOMING",
							"OUTGOING",
							"BOTH"
						]
					},
					"url": {
						"type": "string"
					},
					"maxSize": {
						"type": "integer",
						"format": "int32"
					},
					"previewSize": {
						"type": "integer",
						"format": "int32"
					},
					"connectionSecure": {
						"type": "boolean"
					},
					"verifyCertificate": {
						"type": "boolean"
					},
					"fipsEnabled": {
						"type": "boolean"
					},
					"denyOnConnectionError": {
						"type": "boolean"
					},
					"notifyOnIcapError": {
						"type": "boolean"
					},
					"mailAddressesOnIcapError": {
						"type": "string"
					},
					"notifyOnIcapDenied": {
						"type": "boolean"
					},
					"mailAddressesOnIcapDenied": {
						"type": "string"
					}
				}
			},
			"ExternalIcapServer": {
				"type": "object",
				"properties": {
					"serverEnabled": {
						"type": "boolean"
					},
					"basicSettings": {
						"$ref": "#/components/schemas/BasicSettings"
					},
					"scanFilteringSettings": {
						"$ref": "#/components/schemas/ScanFilteringSettings"
					},
					"headerSettings": {
						"$ref": "#/components/schemas/HeaderSettings"
					},
					"advancedConnectionSettings": {
						"$ref": "#/components/schemas/AdvancedConnectionSettings"
					},
					"advancedIcapSettings": {
						"$ref": "#/components/schemas/AdvancedIcapSettings"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"HeaderSettings": {
				"type": "object",
				"properties": {
					"headersMapping": {
						"type": "string"
					}
				}
			},
			"ScanFilteringSettings": {
				"type": "object",
				"properties": {
					"policyExpression": {
						"type": "string"
					},
					"onlyIfPartnerRecipient": {
						"type": "boolean"
					},
					"withoutBU": {
						"type": "boolean"
					},
					"ignoredFileTypes": {
						"type": "string"
					}
				}
			},
			"ExternalKeystorePassword": {
				"type": "object",
				"properties": {
					"oldPassword": {
						"type": "string"
					},
					"newPassword": {
						"type": "string"
					},
					"confirmPassword": {
						"type": "string"
					}
				}
			},
			"ExternalLdapTestConnectionServer": {
				"required": [
					"id"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					}
				}
			},
			"ExternalLdapAddressBookAttributes": {
				"required": [
					"attribute",
					"mappedAttribute"
				],
				"type": "object",
				"properties": {
					"attribute": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"mappedAttribute": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					}
				}
			},
			"ExternalLdapAttributes": {
				"required": [
					"attribute",
					"mappedAttribute"
				],
				"type": "object",
				"properties": {
					"attribute": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"mappedAttribute": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					}
				}
			},
			"ExternalLdapDnFilter": {
				"required": [
					"enabled",
					"filter",
					"userClass"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"filter": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"userClass": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					}
				}
			},
			"ExternalLdapDomain": {
				"required": [
					"name"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"description": {
						"maxLength": 4000,
						"minLength": 0,
						"type": "string"
					},
					"isDefault": {
						"type": "boolean"
					},
					"precedence": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"ldapServers": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalLdapServer"
						}
					},
					"protocolVersion": {
						"type": "integer",
						"format": "int32"
					},
					"sslEnabled": {
						"type": "boolean"
					},
					"tlsEnabled": {
						"type": "boolean"
					},
					"certVerify": {
						"type": "boolean"
					},
					"referralsAllowed": {
						"type": "boolean"
					},
					"anonymousBindsAllowed": {
						"type": "boolean"
					},
					"bindDn": {
						"type": "string"
					},
					"bindDnPassword": {
						"type": "string"
					},
					"commonCase": {
						"type": "string",
						"enum": [
							"NONE",
							"UPPER",
							"LOWER"
						]
					},
					"ldapSearches": {
						"$ref": "#/components/schemas/LdapSearchesSettings"
					},
					"userSettings": {
						"$ref": "#/components/schemas/UserSettings"
					},
					"attributes": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalLdapAttributes"
						}
					},
					"dnFilters": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalLdapDnFilter"
						}
					},
					"addressBookSettings": {
						"$ref": "#/components/schemas/AddressBookSettings"
					},
					"addressBookAttributes": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalLdapAddressBookAttributes"
						}
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalLdapServer": {
				"required": [
					"host",
					"port"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"host": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"port": {
						"type": "integer",
						"format": "int32"
					},
					"order": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"LdapSearchesSettings": {
				"type": "object",
				"properties": {
					"baseDn": {
						"type": "string"
					},
					"aliasQuery": {
						"type": "string"
					},
					"useGenericSearchFilter": {
						"type": "boolean"
					},
					"genericSearchAttribute": {
						"maxLength": 128,
						"minLength": 0,
						"type": "string"
					},
					"genericSearchFilter": {
						"maxLength": 1024,
						"minLength": 0,
						"type": "string"
					},
					"searchAttribute": {
						"type": "string",
						"enum": [
							"UID",
							"CN",
							"SAMACCOUNTNAME"
						]
					}
				}
			},
			"UserSettings": {
				"type": "object",
				"properties": {
					"defaultUid": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"defaultGid": {
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"defaultUserType": {
						"pattern": "virtual|real",
						"type": "string"
					},
					"defaultUserShell": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"defaultAuthByEmail": {
						"type": "boolean"
					},
					"sysUser": {
						"type": "string"
					}
				}
			},
			"ExternalLoginRestrictionPolicy": {
				"required": [
					"name",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"maxLength": 80,
						"minLength": 1,
						"pattern": "^([^/;']*)$",
						"type": "string"
					},
					"type": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string",
						"enum": [
							"ALLOW_THEN_DENY",
							"DENY_THEN_ALLOW"
						]
					},
					"description": {
						"maxLength": 2048,
						"minLength": 0,
						"type": "string"
					},
					"rules": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ExternalLoginRestrictionRule"
						}
					},
					"businessUnits": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"isDefault": {
						"type": "boolean"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					},
					"default": {
						"type": "boolean",
						"writeOnly": true
					}
				}
			},
			"ExternalLoginRestrictionRule": {
				"required": [
					"clientAddress",
					"name",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"maxLength": 80,
						"minLength": 0,
						"pattern": "^([^/;']*)$",
						"type": "string"
					},
					"isEnabled": {
						"type": "boolean"
					},
					"type": {
						"maxLength": 64,
						"minLength": 0,
						"type": "string"
					},
					"clientAddress": {
						"type": "string"
					},
					"expression": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"remoteAddress": {
						"type": "string",
						"writeOnly": true
					}
				}
			},
			"ExternalBackendCustomLoginSettings": {
				"required": [
					"adminCertificateDepthLimit"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseBackendLoginSettings"
					}
				]
			},
			"ExternalBackendInternalLoginSettings": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseBackendLoginSettings"
					}
				]
			},
			"ExternalBackendTrustedLoginSettings": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseBackendLoginSettings"
					}
				]
			},
			"ExternalBaseBackendLoginSettings": {
				"required": [
					"adminCertificateDepthLimit"
				],
				"type": "object",
				"properties": {
					"userAuthStatus": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"userSSO": {
						"pattern": "disabled|required",
						"type": "string"
					},
					"requirePassword": {
						"pattern": "optional|required|requiredForUserClasses",
						"type": "string"
					},
					"requireCertificateForUserClasses": {
						"pattern": "enabled|disabled",
						"type": "string"
					},
					"requirePasswordUserClasses": {
						"type": "string"
					},
					"ldapOption": {
						"pattern": "disabled|optional|required",
						"type": "string"
					},
					"siteMinderOption": {
						"pattern": "disabled|optional",
						"type": "string"
					},
					"adminAuthStatus": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"adminSSO": {
						"pattern": "disabled|required",
						"type": "string"
					},
					"adminCertificateOption": {
						"pattern": "optional|required|none",
						"type": "string"
					},
					"certificateIssuer": {
						"type": "string"
					},
					"adminCertificateFileOrPath": {
						"type": "string"
					},
					"adminCertificateDepthLimit": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					}
				},
				"discriminator": {
					"propertyName": "certificateIssuer"
				}
			},
			"ExternalSentinelConfiguration": {
				"required": [
					"eventStates",
					"overflowFileSize",
					"overflowFileThreshold",
					"port"
				],
				"type": "object",
				"properties": {
					"heartbeatDelay": {
						"minimum": 1,
						"type": "integer",
						"format": "int64"
					},
					"enabled": {
						"type": "boolean"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"maximum": 65535,
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"useSecureConnection": {
						"type": "boolean"
					},
					"fipsEnabled": {
						"type": "boolean"
					},
					"heartbeatEnabled": {
						"type": "boolean"
					},
					"heartbeatTimeUnit": {
						"pattern": "seconds|minutes|hours",
						"type": "string"
					},
					"eventStates": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"mappingRules": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"overflowFilePath": {
						"type": "string"
					},
					"overflowFileSize": {
						"minimum": 1,
						"type": "integer",
						"format": "int64"
					},
					"overflowFilePolicy": {
						"pattern": "ignore|stop",
						"type": "string"
					},
					"overflowFileThreshold": {
						"maximum": 94,
						"minimum": 1,
						"type": "integer",
						"format": "int32"
					},
					"shouldPersistLinkData": {
						"type": "boolean"
					},
					"shouldVerifyCert": {
						"type": "boolean"
					}
				}
			},
			"ExternalAs2ServerConfiguration": {
				"required": [
					"serverName"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseServerConfiguration"
					},
					{
						"type": "object",
						"properties": {
							"nonSslListenerEnabled": {
								"type": "boolean"
							},
							"nonSslListenerHost": {
								"type": "string"
							},
							"nonSslListenerPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"sslListenerEnabled": {
								"type": "boolean"
							},
							"sslListenerHost": {
								"type": "string"
							},
							"sslListenerPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"enabledCipherSuites": {
								"type": "string"
							},
							"isHstsEnabled": {
								"type": "boolean"
							},
							"isFipsEnabled": {
								"type": "boolean"
							},
							"keyAlgorithm": {
								"type": "string"
							},
							"keyAlias": {
								"type": "string"
							},
							"isReceiverEnabled": {
								"type": "boolean"
							},
							"enabledSslProtocols": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalBaseServerConfiguration": {
				"required": [
					"protocol",
					"serverName"
				],
				"type": "object",
				"properties": {
					"serverName": {
						"maxLength": 250,
						"minLength": 0,
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"id": {
						"type": "string"
					},
					"protocol": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "protocol"
				}
			},
			"ExternalFtpServerConfiguration": {
				"required": [
					"serverName"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseServerConfiguration"
					},
					{
						"type": "object",
						"properties": {
							"host": {
								"type": "string"
							},
							"ciphers": {
								"type": "string"
							},
							"enabledSslProtocols": {
								"type": "string"
							},
							"sslKeyAlgorithm": {
								"type": "string"
							},
							"sslProtocol": {
								"type": "string"
							},
							"sslTrustAlgorithm": {
								"type": "string"
							},
							"port": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"certificateAlias": {
								"type": "string"
							},
							"clientCertificateResolution": {
								"pattern": "none|optional|required",
								"type": "string"
							},
							"isFtpEnabled": {
								"type": "boolean"
							},
							"isFipsEnabled": {
								"type": "boolean"
							},
							"isFtpsEnabled": {
								"type": "boolean"
							},
							"passivePortBase": {
								"type": "integer",
								"format": "int32"
							},
							"passivePortNumber": {
								"type": "integer",
								"format": "int32"
							}
						}
					}
				]
			},
			"ExternalHttpServerConfiguration": {
				"required": [
					"serverName"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseServerConfiguration"
					},
					{
						"type": "object",
						"properties": {
							"httpPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"httpsPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"httpHost": {
								"type": "string"
							},
							"httpsHost": {
								"type": "string"
							},
							"isHttpEnabled": {
								"type": "boolean"
							},
							"isHttpsEnabled": {
								"type": "boolean"
							},
							"loginFormat": {
								"pattern": "HTML|BA|ERR|PREAUTH",
								"type": "string"
							},
							"clientCertificateResolution": {
								"pattern": "none|optional|required",
								"type": "string"
							},
							"certificateAlias": {
								"type": "string"
							},
							"isFipsEnabled": {
								"type": "boolean"
							},
							"sslProtocol": {
								"type": "string"
							},
							"enabledSslProtocols": {
								"type": "string"
							},
							"ciphers": {
								"type": "string"
							},
							"allowedAuthenticationParameters": {
								"type": "string"
							},
							"allowedAuthenticationParametersMaxSize": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"isHstsEnabled": {
								"type": "boolean"
							},
							"contentSecurityPolicy": {
								"type": "string"
							},
							"xssProtection": {
								"pattern": "^$|0|1|1;\\s?mode=block|1;\\s?report=.*",
								"type": "string"
							},
							"contentTypeOptions": {
								"pattern": "^$|nosniff",
								"type": "string"
							},
							"referrerPolicy": {
								"pattern": "^$|no-referrer|no-referrer-when-downgrade|origin|origin-when-cross-origin|same-origin|strict-origin|strict-origin-when-cross-origin|unsafe-url",
								"type": "string"
							},
							"expectCt": {
								"pattern": "^$|max-age=(\\d+)+.*",
								"type": "string"
							},
							"redirectHostname": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalPesitServerConfiguration": {
				"required": [
					"serverName"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseServerConfiguration"
					},
					{
						"type": "object",
						"properties": {
							"host": {
								"type": "string"
							},
							"ciphers": {
								"type": "string"
							},
							"enabledSslProtocols": {
								"type": "string"
							},
							"isFipsEnabled": {
								"type": "boolean"
							},
							"isPesitEnabled": {
								"type": "boolean"
							},
							"pesitPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"isPesitSslEnabled": {
								"type": "boolean"
							},
							"pesitSslPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"pesitKeyAlias": {
								"type": "string"
							},
							"pesitSslProtocol": {
								"type": "string"
							},
							"pesitTrustAlgorithm": {
								"type": "string"
							},
							"pesitKeyAlgorithm": {
								"type": "string"
							},
							"isCftSslEnabled": {
								"type": "boolean"
							},
							"cftSslPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"cftSslKeyAlias": {
								"type": "string"
							},
							"cftSslProtocol": {
								"type": "string"
							},
							"cftSslTrustAlgorithm": {
								"type": "string"
							},
							"cftSslKeyAlgorithm": {
								"type": "string"
							},
							"isPtcpSslEnabled": {
								"type": "boolean"
							},
							"ptcpSslPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"ptcpKeyAlias": {
								"type": "string"
							},
							"ptcpProtocol": {
								"type": "string"
							},
							"ptcpTrustAlgorithm": {
								"type": "string"
							},
							"ptcpKeyAlgorithm": {
								"type": "string"
							},
							"isPtcpEnabled": {
								"type": "boolean"
							},
							"ptcpPort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"clientCertificateResolution": {
								"pattern": "none|optional|required",
								"type": "string"
							},
							"isAutodetectTlsModeEnabled": {
								"type": "boolean"
							},
							"autodetectTlsModePort": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"autodetectTlsModeKeyAlias": {
								"type": "string"
							},
							"autodetectTlsModeTrustAlgorithm": {
								"type": "string"
							},
							"autodetectTlsModeKeyAlgorithm": {
								"type": "string"
							},
							"autodetectTlsModeProtocol": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalSshServerConfiguration": {
				"required": [
					"serverName"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseServerConfiguration"
					},
					{
						"type": "object",
						"properties": {
							"clientCertificateResolution": {
								"pattern": "none|optional|required",
								"type": "string"
							},
							"certificateAlias": {
								"type": "string"
							},
							"port": {
								"maximum": 65535,
								"minimum": 1,
								"type": "integer",
								"format": "int32"
							},
							"host": {
								"type": "string"
							},
							"isScpEnabled": {
								"type": "boolean"
							},
							"isSftpEnabled": {
								"type": "boolean"
							},
							"isFipsEnabled": {
								"type": "boolean"
							},
							"ciphers": {
								"type": "string"
							},
							"keyExchangeAlgorithms": {
								"type": "string"
							},
							"minDiffieHellmanGroupExchangeKeySize": {
								"minimum": 0,
								"type": "integer",
								"format": "int32"
							},
							"publicKeys": {
								"type": "string"
							},
							"allowedMacs": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalBaseSiteTemplate": {
				"required": [
					"name",
					"protocol",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"protocol": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "type"
				}
			},
			"ExternalConnectDirectSiteTemplate": {
				"required": [
					"localServerName",
					"localServerPort",
					"name",
					"protocol",
					"recScript",
					"sendScript",
					"userName"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSiteTemplate"
					},
					{
						"type": "object",
						"properties": {
							"transferMode": {
								"pattern": "^((ASCII_MODE)|(IMAGE_MODE)|(Auto detect))$",
								"type": "string"
							},
							"localServerName": {
								"maxLength": 255,
								"minLength": 0,
								"type": "string"
							},
							"localServerPort": {
								"type": "string"
							},
							"userName": {
								"maxLength": 255,
								"minLength": 0,
								"type": "string"
							},
							"usePassword": {
								"type": "boolean"
							},
							"password": {
								"type": "string"
							},
							"sendScript": {
								"maxLength": 32768,
								"minLength": 0,
								"type": "string"
							},
							"recScript": {
								"maxLength": 32768,
								"minLength": 0,
								"type": "string"
							},
							"usePasswordExpr": {
								"type": "boolean"
							}
						}
					}
				]
			},
			"ExternalSynchronySiteTemplate": {
				"required": [
					"host",
					"name",
					"partner",
					"password",
					"port",
					"protocol",
					"transferProfile",
					"usePasswordExpr",
					"userName"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseSiteTemplate"
					},
					{
						"type": "object",
						"properties": {
							"host": {
								"type": "string"
							},
							"port": {
								"type": "string"
							},
							"userName": {
								"type": "string"
							},
							"usePasswordExpr": {
								"type": "boolean"
							},
							"password": {
								"type": "string"
							},
							"partner": {
								"type": "string"
							},
							"transferProfile": {
								"type": "string"
							},
							"additionalProperties": {
								"$ref": "#/components/schemas/AdditionalProperties"
							},
							"additionalProperty": {
								"$ref": "#/components/schemas/AdditionalProperties"
							}
						}
					}
				]
			},
			"ExternalConnection": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"protocol": {
						"type": "string"
					},
					"host": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"usePassword": {
						"type": "string"
					},
					"clientLocalCertificate": {
						"type": "string"
					},
					"publicKeys": {
						"type": "string"
					},
					"dmz": {
						"type": "string"
					},
					"fingerprint": {
						"type": "string"
					},
					"verifyFinger": {
						"type": "string"
					},
					"socketTimeout": {
						"type": "string"
					},
					"socketBufferSize": {
						"type": "string"
					},
					"socketSendBufferSize": {
						"type": "string"
					},
					"tcpNoDelay": {
						"type": "string"
					},
					"allowedMacs": {
						"type": "string"
					},
					"cipherSuites": {
						"type": "string"
					},
					"keyExchangeAlgorithms": {
						"type": "string"
					},
					"fipsMode": {
						"type": "string"
					}
				}
			},
			"Id": {
				"type": "object",
				"properties": {
					"instantiatedId": {
						"type": "boolean"
					}
				}
			},
			"ExternalAdminPullTransfer": {
				"required": [
					"accountName",
					"destinationDirectory",
					"site"
				],
				"type": "object",
				"properties": {
					"operationIndex": {
						"type": "string"
					},
					"customProperties": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"site": {
						"type": "string"
					},
					"sentinelCycleId": {
						"type": "string"
					},
					"sentinelTrackingObject": {
						"type": "string"
					},
					"destinationDirectory": {
						"type": "string"
					},
					"transferProfile": {
						"type": "string"
					},
					"maxParallelSitPulls": {
						"type": "integer",
						"format": "int32"
					},
					"accountName": {
						"type": "string"
					},
					"asynchronousCall": {
						"type": "boolean"
					}
				}
			},
			"ExternalUserClass": {
				"required": [
					"address",
					"className",
					"group",
					"order",
					"userName",
					"userType"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"className": {
						"maxLength": 32,
						"minLength": 0,
						"type": "string"
					},
					"userType": {
						"pattern": "\\*|real|virtual",
						"type": "string"
					},
					"userName": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"group": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"address": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"expression": {
						"maxLength": 1024,
						"minLength": 0,
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"order": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"FormDataBodyPart": {
				"type": "object",
				"properties": {
					"contentDisposition": {
						"$ref": "#/components/schemas/ContentDisposition"
					},
					"entity": {
						"type": "object"
					},
					"headers": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"mediaType": {
						"type": "object",
						"properties": {
							"type": {
								"type": "string"
							},
							"subtype": {
								"type": "string"
							},
							"parameters": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							},
							"wildcardType": {
								"type": "boolean"
							},
							"wildcardSubtype": {
								"type": "boolean"
							}
						}
					},
					"messageBodyWorkers": {
						"$ref": "#/components/schemas/MessageBodyWorkers"
					},
					"parent": {
						"$ref": "#/components/schemas/MultiPart"
					},
					"providers": {
						"type": "object"
					},
					"formDataContentDisposition": {
						"$ref": "#/components/schemas/FormDataContentDisposition"
					},
					"simple": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"parameterizedHeaders": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ParameterizedHeader"
							}
						}
					}
				}
			},
			"FormDataMultiPart": {
				"type": "object",
				"properties": {
					"contentDisposition": {
						"$ref": "#/components/schemas/ContentDisposition"
					},
					"entity": {
						"type": "object"
					},
					"headers": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"mediaType": {
						"type": "object",
						"properties": {
							"type": {
								"type": "string"
							},
							"subtype": {
								"type": "string"
							},
							"parameters": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							},
							"wildcardType": {
								"type": "boolean"
							},
							"wildcardSubtype": {
								"type": "boolean"
							}
						}
					},
					"messageBodyWorkers": {
						"$ref": "#/components/schemas/MessageBodyWorkers"
					},
					"parent": {
						"$ref": "#/components/schemas/MultiPart"
					},
					"providers": {
						"type": "object"
					},
					"bodyParts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BodyPart"
						}
					},
					"fields": {
						"type": "object",
						"additionalProperties": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/FormDataBodyPart"
							}
						}
					},
					"parameterizedHeaders": {
						"type": "object",
						"properties": {
							"empty": {
								"type": "boolean"
							}
						},
						"additionalProperties": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ParameterizedHeader"
							}
						}
					}
				}
			},
			"ExternalTMPackage": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"isEnabled": {
						"type": "boolean"
					}
				}
			},
			"CustomAttributes": {
				"type": "object",
				"properties": {
					"customProperties": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"binaryData": {
						"type": "array",
						"items": {
							"type": "string",
							"format": "byte"
						}
					},
					"localCerts": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/CertificateReference"
						}
					},
					"partnerCerts": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/CertificateReference"
						}
					},
					"userCerts": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/CertificateReference"
						}
					}
				}
			},
			"ExternalAsyncOperation": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"operation": {
						"type": "string"
					},
					"result": {
						"type": "object",
						"additionalProperties": {
							"type": "object"
						}
					},
					"errorMsg": {
						"type": "string"
					},
					"customAttributes": {
						"$ref": "#/components/schemas/CustomAttributes"
					},
					"metadata": {
						"$ref": "#/components/schemas/ExternalMetadata"
					}
				}
			},
			"ExternalFile": {
				"type": "object",
				"properties": {
					"fileName": {
						"type": "string"
					},
					"owner": {
						"type": "string"
					},
					"group": {
						"type": "string"
					},
					"permissions": {
						"type": "string"
					},
					"size": {
						"type": "integer",
						"format": "int64"
					},
					"transferStatus": {
						"type": "string"
					},
					"lastModifiedTime": {
						"type": "integer",
						"format": "int64"
					},
					"isDirectory": {
						"type": "boolean"
					},
					"isRegularFile": {
						"type": "boolean"
					},
					"isSymbolicLink": {
						"type": "boolean"
					},
					"isShared": {
						"type": "boolean"
					},
					"isOther": {
						"type": "boolean"
					},
					"newFilePath": {
						"pattern": "^[^:*?\\\"<>|\\n]+",
						"type": "string"
					},
					"sharedDirectoryProperties": {
						"$ref": "#/components/schemas/ExternalSharedFolder"
					},
					"customProperties": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}
			},
			"ExternalSharedFolder": {
				"type": "object",
				"properties": {
					"ownerName": {
						"type": "string"
					},
					"ownerEmail": {
						"type": "string"
					},
					"isOwner": {
						"type": "boolean"
					},
					"shareRights": {
						"type": "integer",
						"format": "int32"
					},
					"enableNotifications": {
						"type": "boolean"
					},
					"enableOwnerNotifications": {
						"type": "boolean"
					},
					"showCollaboratorsToAll": {
						"type": "boolean"
					},
					"collaborators": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"ExternalSecretQuestionRequest": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string"
					},
					"secretQuestion": {
						"type": "string"
					},
					"secretAnswer": {
						"type": "string"
					}
				}
			},
			"ExternalChangePassword": {
				"required": [
					"newPassword",
					"oldPassword"
				],
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalPassword"
					},
					{
						"type": "object",
						"properties": {
							"oldPassword": {
								"type": "string"
							},
							"newPassword": {
								"type": "string"
							}
						}
					}
				]
			},
			"ExternalForgottenPassword": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalPassword"
					},
					{
						"type": "object",
						"properties": {
							"token": {
								"type": "string"
							},
							"secretAnswer": {
								"type": "string"
							},
							"newPassword": {
								"type": "string"
							},
							"username": {
								"type": "string"
							},
							"userName": {
								"type": "string",
								"writeOnly": true
							}
						}
					}
				]
			},
			"ExternalPassword": {
				"required": [
					"operation"
				],
				"type": "object",
				"properties": {
					"operation": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "operation"
				}
			},
			"ExternalResetPasswordRequest": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalPassword"
					},
					{
						"type": "object",
						"properties": {
							"username": {
								"type": "string"
							},
							"email": {
								"type": "string"
							}
						}
					}
				]
			},
			"Account": {
				"type": "object",
				"properties": {
					"unlicensedAllowedToReply": {
						"type": "boolean"
					},
					"businessUnit": {
						"$ref": "#/components/schemas/BusinessUnit"
					},
					"loginRestrictionPolicy": {
						"$ref": "#/components/schemas/LoginRestrictionPolicy"
					},
					"usrId": {
						"type": "string"
					},
					"grpId": {
						"type": "string"
					},
					"homeFolderPath": {
						"type": "string"
					},
					"homeFolder": {
						"type": "string",
						"format": "binary"
					},
					"phone": {
						"type": "string"
					},
					"mappedUser": {
						"type": "string"
					},
					"serviceType": {
						"type": "boolean"
					},
					"template": {
						"type": "boolean"
					},
					"deliveryMethod": {
						"type": "string",
						"enum": [
							"DISABLED",
							"DEFAULT",
							"ANONYMOUS",
							"ACCOUNT_WITHOUT_ENROLLMENT",
							"ACCOUNT_WITH_ENROLLMENT",
							"CUSTOM"
						]
					},
					"enrollmentTypes": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"ANONYMOUS_LINK",
								"CHALLENGED_LINK",
								"EXISTING_ACCOUNT",
								"ENROLL_UNLICENSED",
								"ENROLL_LICENSED",
								"ENROLL_MOBILE"
							]
						}
					},
					"implicitEnrollmentType": {
						"type": "string",
						"enum": [
							"ANONYMOUS_LINK",
							"CHALLENGED_LINK",
							"EXISTING_ACCOUNT",
							"ENROLL_UNLICENSED",
							"ENROLL_LICENSED",
							"ENROLL_MOBILE"
						]
					},
					"customAttributes": {
						"$ref": "#/components/schemas/CustomAttributes"
					},
					"accountType": {
						"type": "string"
					},
					"htmlTemplateFolderPath": {
						"type": "string"
					},
					"authByEmail": {
						"type": "boolean"
					},
					"unlicensed": {
						"type": "boolean"
					},
					"homeFolderAccessLevel": {
						"type": "string",
						"enum": [
							"PRIVATE",
							"BUSINESS_UNIT",
							"PUBLIC"
						]
					},
					"archivingPolicy": {
						"type": "string",
						"enum": [
							"default",
							"enabled",
							"disabled"
						]
					},
					"addressBookPolicy": {
						"type": "string",
						"enum": [
							"default",
							"custom",
							"disabled"
						]
					},
					"addressBookCollaborationAllowed": {
						"type": "boolean"
					},
					"instantiatingTemplateId": {
						"$ref": "#/components/schemas/Id"
					},
					"disabled": {
						"type": "boolean"
					},
					"email": {
						"type": "string"
					},
					"creationDate": {
						"type": "integer",
						"format": "int64"
					},
					"uid": {
						"type": "integer",
						"format": "int64"
					},
					"gid": {
						"type": "integer",
						"format": "int64"
					},
					"notes": {
						"type": "string"
					},
					"lastModified": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"$ref": "#/components/schemas/Id"
					}
				}
			},
			"BusinessUnit": {
				"type": "object",
				"properties": {
					"loginRestrictionPolicy": {
						"$ref": "#/components/schemas/LoginRestrictionPolicy"
					},
					"deliveryMethod": {
						"type": "string",
						"enum": [
							"DISABLED",
							"DEFAULT",
							"ANONYMOUS",
							"ACCOUNT_WITHOUT_ENROLLMENT",
							"ACCOUNT_WITH_ENROLLMENT",
							"CUSTOM"
						]
					},
					"enrollmentTypes": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"ANONYMOUS_LINK",
								"CHALLENGED_LINK",
								"EXISTING_ACCOUNT",
								"ENROLL_UNLICENSED",
								"ENROLL_LICENSED",
								"ENROLL_MOBILE"
							]
						}
					},
					"implicitEnrollmentType": {
						"type": "string",
						"enum": [
							"ANONYMOUS_LINK",
							"CHALLENGED_LINK",
							"EXISTING_ACCOUNT",
							"ENROLL_UNLICENSED",
							"ENROLL_LICENSED",
							"ENROLL_MOBILE"
						]
					},
					"customAttributes": {
						"$ref": "#/components/schemas/CustomAttributes"
					},
					"htmlTemplateFolderPath": {
						"type": "string"
					},
					"authByEmail": {
						"type": "boolean"
					},
					"archivingPolicy": {
						"type": "string",
						"enum": [
							"default",
							"enabled",
							"disabled"
						]
					},
					"addressBookPolicy": {
						"type": "string",
						"enum": [
							"default",
							"custom",
							"disabled"
						]
					},
					"addressBookCollaborationAllowed": {
						"type": "boolean"
					},
					"loginRestrictionPolicyAllowedForModifying": {
						"type": "boolean"
					},
					"baseFolder": {
						"type": "string",
						"format": "binary"
					},
					"enrollmentTemplate": {
						"$ref": "#/components/schemas/Account"
					},
					"baseFolderAllowedForModifying": {
						"type": "boolean"
					},
					"homeUserFolderAllowedForModifying": {
						"type": "boolean"
					},
					"htmlTemplateAllowedForModifying": {
						"type": "boolean"
					},
					"enrollmentRightsAllowedForModifying": {
						"type": "boolean"
					},
					"authByEmailAllowedForModifying": {
						"type": "boolean"
					},
					"webServiceRightsAllowedForModifying": {
						"type": "boolean"
					},
					"notificationTemplate": {
						"$ref": "#/components/schemas/MailTemplate"
					},
					"dmzZone": {
						"$ref": "#/components/schemas/DmzZone"
					},
					"sharedFoldersCollaborationAllowed": {
						"type": "boolean"
					},
					"customEncryptionCertificatePolicy": {
						"type": "string",
						"enum": [
							"default",
							"custom",
							"disabled"
						]
					},
					"customEncryptionCertificate": {
						"type": "string"
					},
					"usingCustomArchivingFolder": {
						"type": "boolean"
					},
					"customArchivingFolder": {
						"type": "string"
					},
					"usingCustomArchivingFileSize": {
						"type": "boolean"
					},
					"customArchivingFileSizePolicy": {
						"type": "string"
					},
					"customArchivingFileSize": {
						"type": "integer",
						"format": "int64"
					},
					"fileArchivingPolicyModifyingAllowed": {
						"type": "boolean"
					},
					"modifyAddressBookCollaborationAllowed": {
						"type": "boolean"
					},
					"modifyAddressBookAccountSourcesAllowed": {
						"type": "boolean"
					},
					"icapServers": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/IcapServer"
						}
					},
					"name": {
						"type": "string"
					},
					"parent": {
						"$ref": "#/components/schemas/BusinessUnit"
					},
					"id": {
						"$ref": "#/components/schemas/Id"
					}
				}
			},
			"CertificateReference": {
				"type": "object",
				"properties": {
					"accountId": {
						"$ref": "#/components/schemas/Id"
					},
					"accessLevel": {
						"type": "string",
						"enum": [
							"PRIVATE",
							"BUSINESS_UNIT",
							"PUBLIC"
						]
					},
					"partner": {
						"type": "boolean"
					},
					"user": {
						"type": "boolean"
					},
					"usage": {
						"type": "string"
					},
					"alias": {
						"type": "string"
					},
					"local": {
						"type": "boolean"
					},
					"subject": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"$ref": "#/components/schemas/Id"
					},
					"type": {
						"type": "integer",
						"format": "int32"
					},
					"trusted": {
						"type": "boolean"
					}
				}
			},
			"DmzEdge": {
				"type": "object",
				"properties": {
					"configurationId": {
						"type": "string"
					},
					"enabledProxy": {
						"type": "boolean"
					},
					"zoneId": {
						"type": "string"
					},
					"ipAddresses": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DmzEdgeIpAddress"
						}
					},
					"deploymentSite": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"proxies": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DmzEdgeProxy"
						}
					},
					"notes": {
						"type": "string"
					},
					"protocols": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DmzEdgeProtocol"
						}
					},
					"id": {
						"type": "string"
					}
				}
			},
			"DmzEdgeIpAddress": {
				"type": "object",
				"properties": {
					"edgeId": {
						"type": "string"
					},
					"ipAddress": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				}
			},
			"DmzEdgeProtocol": {
				"type": "object",
				"properties": {
					"streamingProtocol": {
						"type": "string",
						"enum": [
							"HTTP",
							"FTP",
							"AS2",
							"SSH",
							"PESIT",
							"ADMIN"
						]
					},
					"certificateReference": {
						"$ref": "#/components/schemas/CertificateReference"
					},
					"isEnabled": {
						"type": "boolean",
						"writeOnly": true
					},
					"edgeId": {
						"type": "string"
					},
					"port": {
						"type": "integer",
						"format": "int32"
					},
					"id": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					}
				}
			},
			"DmzEdgeProxy": {
				"type": "object",
				"properties": {
					"edgeId": {
						"type": "string"
					},
					"proxyProtocol": {
						"type": "string",
						"enum": [
							"SOCKS_PROXY",
							"HTTP_PROXY"
						]
					},
					"dmzEdge": {
						"$ref": "#/components/schemas/DmzEdge"
					},
					"usePassword": {
						"type": "boolean"
					},
					"isUsePassword": {
						"type": "boolean",
						"writeOnly": true
					},
					"password": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"username": {
						"type": "string"
					},
					"port": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"DmzZone": {
				"type": "object",
				"properties": {
					"publicURLPrefix": {
						"type": "string"
					},
					"ssoSpEntityId": {
						"type": "string"
					},
					"dnsResolutionEnabled": {
						"type": "boolean"
					},
					"edges": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DmzEdge"
						}
					},
					"description": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"default": {
						"type": "boolean"
					}
				}
			},
			"ExternalBaseTransfer": {
				"required": [
					"operation"
				],
				"type": "object",
				"properties": {
					"operation": {
						"type": "string"
					}
				},
				"discriminator": {
					"propertyName": "operation"
				}
			},
			"ExternalFolderMonitor": {
				"required": [
					"downloadFolderAdvancedExpressionEnabled",
					"fileCaseSensitive"
				],
				"type": "object",
				"properties": {
					"account": {
						"$ref": "#/components/schemas/Account"
					},
					"siteName": {
						"type": "string"
					},
					"siteProtocol": {
						"type": "string"
					},
					"downloadFolderAdvancedExpressionEnabled": {
						"type": "boolean"
					},
					"subscriptionId": {
						"$ref": "#/components/schemas/Id"
					},
					"downloadFolder": {
						"type": "string"
					},
					"filePattern": {
						"type": "string"
					},
					"filePatternType": {
						"type": "string"
					},
					"fileCaseSensitive": {
						"type": "boolean"
					},
					"subFolderPattern": {
						"type": "string"
					},
					"subFolderPatternType": {
						"type": "string"
					},
					"subFolderCaseSensitive": {
						"type": "boolean"
					},
					"subFolderMaxDepth": {
						"type": "integer",
						"format": "int32"
					},
					"uploadFolder": {
						"type": "string"
					},
					"operationIndex": {
						"type": "string"
					},
					"lastAccessTime": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"ExternalFolderMonitorData": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseTransfer"
					},
					{
						"type": "object",
						"properties": {
							"data": {
								"$ref": "#/components/schemas/ExternalFolderMonitor"
							}
						}
					}
				]
			},
			"ExternalPullTransfer": {
				"type": "object",
				"properties": {
					"operationIndex": {
						"type": "string"
					},
					"customProperties": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"site": {
						"type": "string"
					},
					"sentinelCycleId": {
						"type": "string"
					},
					"sentinelTrackingObject": {
						"type": "string"
					},
					"destinationDirectory": {
						"type": "string"
					},
					"transferProfile": {
						"type": "string"
					},
					"maxParallelSitPulls": {
						"type": "integer",
						"format": "int32"
					},
					"asynchronousCall": {
						"type": "boolean"
					}
				}
			},
			"ExternalPushTransfer": {
				"type": "object",
				"properties": {
					"operationIndex": {
						"type": "string"
					},
					"customProperties": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					},
					"site": {
						"type": "string"
					},
					"sentinelCycleId": {
						"type": "string"
					},
					"sentinelTrackingObject": {
						"type": "string"
					},
					"file": {
						"type": "string"
					},
					"transferProfile": {
						"type": "string"
					},
					"asynchronousCall": {
						"type": "boolean"
					}
				}
			},
			"ExternalTransferPullData": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseTransfer"
					},
					{
						"type": "object",
						"properties": {
							"data": {
								"$ref": "#/components/schemas/ExternalPullTransfer"
							}
						}
					}
				]
			},
			"ExternalTransferPushData": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/components/schemas/ExternalBaseTransfer"
					},
					{
						"type": "object",
						"properties": {
							"data": {
								"$ref": "#/components/schemas/ExternalPushTransfer"
							}
						}
					}
				]
			},
			"IcapServer": {
				"type": "object",
				"properties": {
					"customAttributes": {
						"$ref": "#/components/schemas/CustomAttributes"
					},
					"certVerify": {
						"type": "boolean"
					},
					"useSecure": {
						"type": "boolean"
					},
					"enabledCiphers": {
						"type": "string"
					},
					"fipsEnabled": {
						"type": "boolean"
					},
					"maxSize": {
						"type": "integer",
						"format": "int32"
					},
					"previewSize": {
						"type": "integer",
						"format": "int32"
					},
					"denyOnConnectionError": {
						"type": "boolean"
					},
					"notifyOnIcapError": {
						"type": "boolean"
					},
					"mailAddressesOnIcapError": {
						"type": "string"
					},
					"notifyOnIcapDenied": {
						"type": "boolean"
					},
					"mailAddressesOnIcapDenied": {
						"type": "string"
					},
					"headersMapping": {
						"type": "string"
					},
					"enableWinNtFormat": {
						"type": "boolean"
					},
					"scanWithoutBu": {
						"type": "boolean"
					},
					"ignoredFileTypes": {
						"type": "string"
					},
					"stopModifyOrNotHandled": {
						"type": "boolean"
					},
					"treatModifyAsBlock": {
						"type": "boolean"
					},
					"scanPolicyExpression": {
						"type": "string"
					},
					"scanOnlyIfPartnerRecipient": {
						"type": "boolean"
					},
					"url": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"enabledProtocols": {
						"type": "string"
					},
					"connectionTimeout": {
						"type": "integer",
						"format": "int32"
					},
					"readTimeout": {
						"type": "integer",
						"format": "int32"
					},
					"type": {
						"type": "string",
						"enum": [
							"INCOMING",
							"OUTGOING",
							"BOTH"
						]
					},
					"name": {
						"type": "string"
					}
				}
			},
			"LoginRestrictionPolicy": {
				"type": "object",
				"properties": {
					"customAttributes": {
						"$ref": "#/components/schemas/CustomAttributes"
					},
					"businessUnits": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BusinessUnit"
						}
					},
					"description": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"rules": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LoginRestrictionRule"
						}
					},
					"type": {
						"type": "string",
						"enum": [
							"ALLOW_THEN_DENY",
							"DENY_THEN_ALLOW"
						]
					},
					"name": {
						"type": "string"
					},
					"default": {
						"type": "boolean"
					}
				}
			},
			"LoginRestrictionRule": {
				"type": "object",
				"properties": {
					"customAttributes": {
						"$ref": "#/components/schemas/CustomAttributes"
					},
					"clientAddress": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"expression": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"policy": {
						"$ref": "#/components/schemas/LoginRestrictionPolicy"
					},
					"type": {
						"type": "string",
						"enum": [
							"ALLOW",
							"DENY"
						]
					},
					"name": {
						"type": "string"
					}
				}
			},
			"MailTemplate": {
				"type": "object",
				"properties": {
					"description": {
						"type": "string"
					},
					"content": {
						"type": "array",
						"items": {
							"type": "string",
							"format": "byte"
						}
					},
					"name": {
						"type": "string"
					}
				}
			}
		}
	}
}